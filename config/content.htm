<h1>About</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">網頁：  </span></span><a href="https://mdecd2024.github.io/2a-midag8/content/index.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://mdecd2024.github.io/2a-midag8/content/index.html</span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">網誌：</span></span><a href="https://mdecd2024.github.io/2a-midag8/blog"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://mdecd2024.github.io/2a-midag8/blog</span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">簡報：  </span></span><a href="https://mdecd2024.github.io/2a-midag8/reveal/index.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://mdecd2024.github.io/2a-midag8/reveal/index.html</span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">倉儲：  </span></span><a href="https://github.com/mdecd2024/2a-midag8"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecd2024/2a-midag8</span></span></a></p>
<p>41023108:<a href="https://kehueisin.github.io/cd2024/content/index.html">靜態</a>、<a href="https://kehueisin.github.io/cd2024/blog/index.html">網誌</a>、<a href="https://github.com/KEHUEISIN/cd2024">倉儲</a></p>
<p>41023110:<a href="https://41023110.github.io/cd2024/content/index.html">靜態</a>、<a href="https://41023110.github.io/cd2024/blog/index.html">網誌</a>、<a href="https://github.com/41023110/cd2024">倉儲</a></p>
<p>41023155:<a href="https://41023155.github.io/cd2024/content/index.html">靜態</a>、<a href="https://41023155.github.io/cd2024/blog/index.html">網誌</a>、<a href="https://github.com/41023155/cd2024">倉儲</a></p>
<p>41023211:<a href="https://wmrtbij49h.github.io/cd2024/content/index.html">靜態</a>、<a href="https://wmrtbij49h.github.io/cd2024/blog/index.html">網誌</a>、<a href="https://github.com/Wmrtbij49h/cd2024">倉儲</a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">本cmsimde網際內容管理系統的範本應答：</span></span></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecycu/cmsimde_site</span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">此範本將cmsimde作為子目錄硬體子模組，使用者可依需求自行修改</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">對應倉儲網站： https: </span></span><a href="https://mde.tw/cmsimde_site"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">//mde.tw/cmsimde_site</span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></p>
<h1>Practice</h1>
<p><strong><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">練習1：</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">請各包製作一個以Web為基礎的網誌與簡報，了解如何利用隨身碟、  </span></span><a href="https://replit.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Replit</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> 與 </span></span><a href="https://www.google.com/search?q=github+codespaces"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Codespaces</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> 中維護個人與包的網站內容？</span></span></strong></p>
<p><strong><span style="background-color: #ff0000;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">答：</span></span></span><span style="vertical-align: inherit;"></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">每個一個Blog</span><span style="vertical-align: inherit;">都有&lt;code&gt;，在完成建立組Blog後有code就可以修改版本。</span><span style="vertical-align: inherit;">是另一個設定</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">。開始運作後要執行python3 main。 -replit </span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">。編輯器</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">。月給定數量相同，編輯可以在界面外，上傳時開啟就好，使用完後要記得關閉，每月用量平均好就可以一直免費使用。</span></span></strong></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">練習2：</span></span></strong></span><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">請各包製作一個基於Web的網誌與簡報，說明如何在 </span></span></strong><strong><a href="https://www.coppeliarobotics.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">CoppeliaSim</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> 環境中，利用IPv6  </span></span><a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">ZeroMQ Remote API</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">  Python進行兩個自由度的鋼球平衡台自動控制系統模擬？</span></span></strong></p>
<p><span style="background-color: #ff0000;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">答：</span></span></strong></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">ZeroMQ最終API</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">共分了7種不同的程式語言。</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1.Python客戶端</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">2.C++客戶端</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">3.Java客戶端</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">4.Matlab用戶端</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">5.Octave用戶端</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">6.Lua客戶端</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">7.Rust用戶端</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">每種語言都需要套件</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1.Python客戶端:$ python3 -m pip install coppeliasim-zmqremoteapi-client </span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">2.C++客戶端:jsoncons和cppzmq套件</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">3.Java客戶端:Apache Maven 今天ex. $ 匯出 COPPELIASIM_ROOT_DIR=path/to/CoppeliaSim/exec/folder/or/resources/folder/on/macOS </span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">$ cd zmqRemoteApi/clients/java </span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">$ mvn package -D"GENERATE_INCLUDE_OBJECTSsim,IK."</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">#注意需確保您的資料夾名稱不包含任何空格，並且 CoppeliaSim 正在運行（API 函數從 CoppeliaSim 獲取）前面只考慮了 sim 和 simIK 命名空間，您可以根據需要添加更多命名空間# </span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">4.Matlab 用戶端：需要數十個JeroMQ，如果尚不存在，它會自動安裝</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">5.Octave用戶端：需要Octave 6.4+、octave通訊和Zeromq軟體包</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">6.Lua客戶端：目前，僅在CoppeliaSim腳本內支援Lua用戶端，或支援API用戶端方案碼</span></span><br/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">7.Rust用戶端：Samuel Cavalcanti 提供</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">上面為ZeroMQ最終API應用程式與CoppeliaSim連接的多種方式及要連接所需的插件程式庫的各程式語言，後續能繼續分下去，上述指示統整。</span></span></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">練習3：</span></span></strong></span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">建立 foot_basket_ball 模擬場景</span></span></strong></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">挽救cd2023的足球競技場景模擬檔：  </span></span><a href="http://229.cycu.org/cd2023_pj3_football_field_specification_ttt.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2023_pj3_football_field_specation_ttt.7z</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">  （需要密碼）</span></span></strong></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">產品設計不是一件簡單的事，尤其是當設計的目的，是希望當前一套可以永續且認知的組成，而非單一的得到能滿足必需需求的內容。</span></span></strong></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">以 cd2024 的部分美好期末專案來說，可以在上列 cd2023 課程中的場景剛才延伸，其中將底座以下：</span></span></strong></p>
<ol>
<li><strong>附加的零組件要採用何種套件製作, 當團隊選擇一項 MCAD(Mechanical Computer Aided Design, 電腦輔助設計) 套件後, 隨即便產生, 協同團隊成員是否都能使用所選擇的套件? 各成員所使用同一套件的不同版本進行零組件繪圖, 之後的協同流程會不會產生問題?</strong></li>
<li><strong>當零件在各協同成員的 MCAD 套件中進行繪圖, 是否使用相同的單位尺寸設定? 各零組件選擇不同的絕對與相對座標系統, 對於接下來在不同套件間的轉檔, 會不會產生問題, 或者讓協同設計流程更加繁瑣?</strong></li>
<li><strong>從 MCAD 將零組件轉出時, 各成員即便選擇了相同的輸出(Export)檔案格式, 不同的轉檔格式疏密度, 對於後續的零組件應用有沒有影響?</strong></li>
<li><strong>當零組件轉入機電模擬系統時, 將牽涉到輸入(Import)縮放比例, 以及各零件轉入後的絕對與相對座標選擇, 不同的選擇會不會對後續的動態模擬系統設定造成一定的影響?尤其過程中牽涉開放機構(Open-chain) 與封閉(Closed-chain)機構組件時, 選擇不同的零組件絕對與區域座標系統之後, 會不會對之後的機構連桿運動設定造成問題?</strong></li>
<li><strong>而最後, 當所需要的基本場景已經建立完成, 由於客戶或機電整合流程的配合需求, 必須改變特定零件的組立架構, 或是零組件的參數尺寸, 前面的所有步驟都需要重來一次嗎?</strong></li>
<li><strong>以下是在面對上列諸多議題時, 以 Solvespace 建立一塊籃球板, 然後正設法放置到規定位置的參考場景檔案: <a href="http://229.cycu.org/cd2024_footbasket_ball_spec_add_slvs_board.7z">cd2024_footbasket_ball_spec_add_slvs_board.7z</a></strong></li>
</ol>
<p><strong><img alt="" height="178" src="https://mde.tw/cd2024/images/cd2024_field_step1.png" width="400"/></strong></p>
<p><strong>操作過程如下:</strong></p>
<ol>
<li><strong>開啟 Solvespace, 確認作圖單位為 mm, 繪製一個 100mmx200mmx300mm 的方塊零件, 準備最為籃球板.</strong></li>
<li><strong>由於 CoppeliaSim 內定的場景地面座標為 X-Y, 因此若在 Solvespace 中建立零件, 必須要確定零件的局部座標系與絕對坐標系的關係.</strong></li>
<li><strong>由於開啟 cd2023 模擬場景後, 發現所有的零件都以其自身的局域坐標系原點, 放在零件的正中央, 因此若將零件轉入 CoppeliaSim 後, 希望精確掌握零件的定位, 則在繪製零件草圖時, 必須設定好輪廓與絕對座標系統之間的關係.</strong></li>
<li><strong>另外, 由於 CoppeliaSim 4.5.1 版會將所有的轉入零件採同一個座標原點, 而非如舊版本轉入後各自以其局部座標系統進行定位.</strong></li>
<li><strong>而且還必須了解 CoppeliaSim 內建的尺寸單位為 m, 目前 Solvespace 轉出的製圖單位則是 mm, 因此中間差別了 1000 倍, 所以將作圖單位設為 mm 的 Solvespace 零件, 轉入 CoppeliaSim 若要使用其原先的作圖尺寸, 則必須縮小 0.001 倍.</strong></li>
<li><strong>之後, 還必須利用 Edit -&gt; Shape reference frame -&gt; Relocate to mesh center 將各零件的參考座標系統原點, 從廣域座標系原點, 轉換到零件個別的物件中心原點.</strong></li>
<li><strong>若零件轉入 CoppeliaSim 時選擇 Z 軸向上, 則籃球板零件轉入後, 將平躺在場景中, 若要轉至與現有的足球門相同方位, 則必須分別對自己的 X 軸與 Y 軸個旋轉 90 度.</strong></li>
<li><strong>最後再任選一座球門的 X, Y 座標系統原點位置(position), 逐步將 basketball board 放到正確的位置, 結果如: <a href="http://229.cycu.org/cd2024_footbasket_ball_spec_add_slvs_board.7z">cd2024_footbasket_ball_spec_add_slvs_board.7z</a></strong></li>
</ol>
<p></p>
<p><strong>協同零組件繪圖: Onshape</strong></p>
<p><strong>協同分組報告: LaTeX -&gt; pdf</strong></p>
<h2>W3 Task</h2>
<p><span style="background-color: #ffff00;">cd2024 w3 任務頁面</span></p>
<p>cd2024 w3 任務</p>
<p>1. 請各組將組員的個人課程倉儲 cd2024 設為分組倉儲 2a-midag1 的子模組, 且以各組員的學號作為子模組的名稱</p>
<p>議題:</p>
<p>如何在倉儲中設定子模組, 為何要將資料設為子模組?</p>
<p>能不能在 Replit 維護分組網站? 其他方法還可以直接使用 Codespaces, Gitpod 與 localhost 維護倉儲與網站</p>
<p>假如仍希望使用 Replit 維護分組網站, 該如何進行?</p>
<p>2. 請各組員將負責分工處理的 <a aria-label="連結 https://webthesis.biblio.polito.it/16429/1/tesi.pdf" class="fui-Link ___1rxvrpe f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1hu3pq6 f11qmguv f19f4twv f1tyq0we f1g0x7ka fhxju0i f1qch9an f1cnd47f fqv5qza f1vmzxwi f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf" rel="noreferrer noopener" target="_blank" title="https://webthesis.biblio.polito.it/16429/1/tesi.pdf">https://webthesis.biblio.polito.it/16429/1/tesi.pdf</a> 中英文並列資料 (LaTeX) 放在個人的倉儲網站, 最後在分組倉儲中整合建立出各組的期中報告 pdf 檔案</p>
<p>該文章有 87 頁, 若有八名組員, 則每人可分工負責 11 頁, 若兩組以上結合協同, 則可按照規劃, 從文章標題開始到最後一頁, 先分配各組員任務後展開中英文並列編輯, 可以使用翻譯軟體或 ChatGPT 協助進行內容解釋或翻譯, 各組通篇完成中英並列資料整合後, 各學員必須於個人的課程倉儲 cd2024 中整理出協同過程的心得.</p>
<p>---------------------------------------------------------------------------------------------------------</p>
<p>1.需先將分組倉儲clone到近端可攜環境中的tmp目錄下，權限的部分依照前面putty設立的key.</p>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻译" data-ved="2ahUKEwjssN-vlOmEAxVLs1YBHZ8ABe0Q3ewLegQIDhAU" dir="ltr" id="tw-target-text"><span class="Y2IQFc" lang="en" style="background-color: #ffff00;">method:</span></pre>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">第一步:git clone --recurse-submodules git@mdecycu:mdecd2024/2a-midag8.git  #需有權限才能抓取到<span></span>
<span></span>
第二步:直接進入tmp目錄下分組倉儲，後輸入 git submodule add https://github.com/41023110/cd2024.git 41023110  #分組組員個人cd2024倉儲，並以組員學號當作子目錄名稱，其中名稱並不影響組員抓取內容<span></span>
<span></span>
第三步:git add .      git commit -m "add"      git push #將近端內容推致遠端</pre>
<p><span style="color: #000000;"></span>2.我們將以4人分配87頁翻譯資料，平均1人22頁，並將各分配到的段數翻譯完成後放在自己的倉儲下，最後統一</p>
<p>在分組倉儲中整合建立出各組的期中報告 pdf 檔案。</p>
<p>第一段 1-21page 由41023108  (<span>ACKNOWLEDGMENTS.txt, Creative Commons.txt, LIST OF ACRONYMS.txt, abstract.txt, introduction_orig.txt, </span></p>
<p>第二段 21-43page 由41023155 (<span>introduction_orig.txt,</span></p>
<p>第三段 43-65page 由41023110 (<span>introduction_orig.txt,</span></p>
<p>第四段 65-87page 由41023211 (<span>introduction_orig.txt,</span></p>
<h2>w4 Task</h2>
<p>W4 各組員任務</p>
<p><span style="background-color: #ffff00;">作業1:</span></p>
<p>各組員必須能在各自的個人課程倉儲放置所被交付編寫的  .txt (in LaTeX 格式), 然後整合至各組的分組倉儲, 由 xelatex 編譯出各週的分組報告 pdf 檔案.</p>
<p>w4 2a 分組任務</p>
<p><span style="background-color: #ffff00;">作業2:</span></p>
<p>請各組自行搜尋前面已經發布的教學影片, 分別</p>
<ul>
<li>在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上</li>
<li>從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排</li>
<li>並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點</li>
</ul>
<p>-------------------------------------------------------------------------------------------</p>
<p>以下為影片剪輯後製分工情形:</p>
<p>w1 video 41023211</p>
<p>w2 video 41023155</p>
<p>w3 video 41023110</p>
<p>w4 video 41023108</p>
<p>誰先做完就幫助其他組員完成各週影片剪輯<img alt="smile" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-smile.gif"/>!!</p>
<h3>w4 2a hw2(w1</h3>
<p><span style="background-color: #ffff00;">w1</span></p>
<p><strong>2a 建個人課程倉儲</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/geXvKSr-qlo?si=NvUgw6FKAv1QMxBG" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/mdecd2024/2a-midag8/commit/7d7235382be3ee26d9b335f2982fe4d9482630b5">https://github.com/mdecd2024/2a-midag8/commit/7d7235382be3ee26d9b335f2982fe4d9482630b5</a></strong></p>
<p><strong>將個人倉儲 import 至 Replit(上)</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/cf3OuPL-JIo?si=nCff5axAFQmorx0i" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/mdecd2024/2a-midag8/commit/c46882f9ce10c6761cbf52688ef24fa76b69b524">https://github.com/mdecd2024/2a-midag8/commit/c46882f9ce10c6761cbf52688ef24fa76b69b524</a></strong></p>
<p><strong>將個人倉儲 import 至 Replit(下)</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_swU_pHUOUM?si=JxQENM6okODyobEP" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/mdecd2024/2a-midag8/commit/c46882f9ce10c6761cbf52688ef24fa76b69b524">https://github.com/mdecd2024/2a-midag8/commit/c46882f9ce10c6761cbf52688ef24fa76b69b524</a></strong></p>
<p><strong>設定 Github 帳號的雙重認證</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-ZmDQZ9ZV-Y?si=6iLLUk9DOYv3xDem" title="YouTube video player" width="560"></iframe></p>
<p><strong></strong></p>
<p><strong>如何 import 倉儲至 Replit 進行改版</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jcXKOmJ4uk0?si=rEC6RRICLek1avK5" title="YouTube video player" width="560"></iframe></p>
<p><strong>如何設定網誌</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/81LNpVtI8sM?si=W7J4fABzLi4kRN-v" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/mdecd2024/2a-midag8/blob/main/downloads/2a_1.txt">https://github.com/mdecd2024/2a-midag8/blob/main/downloads/2a_1.txt</a></strong></p>
<p><strong>Odoo PLM 功能</strong></p>
<p><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/6JXeRFQwx3w?si=qfq3Uh9WLhXpqPFi" title="YouTube video player" width="560"></iframe></strong></p>
<p><a href="https://github.com/mdecd2024/2a-midag8/blob/main/downloads/cd2024_2a_2_odoo_plm%E7%B0%A1%E4%BB%8B%20%E5%AD%97%E5%B9%95%E6%96%87%E5%AD%97%E6%AA%94.txt">https://github.com/mdecd2024/2a-midag8/blob/main/downloads/cd2024_2a_2_odoo_plm%E7%B0%A1%E4%BB%8B%20%E5%AD%97%E5%B9%95%E6%96%87%E5%AD%97%E6%AA%94.txt</a></p>
<p></p>
<p><strong></strong></p>
<h3>w4 2a hw2(w2</h3>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">w2</span></span></span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用Github Classroom 指定分組錢包</span></span></strong></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1.甲班第一組長如何組成midag1隊， </span></span></strong></p>
<p><strong><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jcXKOmJ4uk0?si=rEC6RRICLek1avK5" title="YouTube video player" width="560"></iframe></strong></strong></p>
<p><strong><strong><a href="https://github.com/41023155/cd2024/blob/main/downloads/13.24.txt">https://github.com/41023155/cd2024/blob/main/downloads/13.24.txt</a></strong></strong></p>
<p>用<span> Codespaces </span>開啟動態網頁</p>
<p>執行以下命令使<span> init_replit </span>檔案具有執行權限：</p>
<p><span>chmod u+x init_replit</span></p>
<p>執行<span> init_replit </span>檔案：</p>
<p><span>./init_replit</span></p>
<p>執行<span> main.py </span>檔案：</p>
<p><span>python3 main.py</span></p>
<p>用<span> Codespaces </span>開啟靜態網頁</p>
<p>執行以下命令啟動<span> Python </span>內建的簡易伺服器：</p>
<p><span>python3 -m http.server</span></p>
<p>如何進行改版</p>
<p>使用<span> git status </span>命令查看目前的修改狀態。</p>
<p>使用<span> git add . </span>命令將所有修改的檔案添加到暫存區。</p>
<p>使用<span> git commit -m "</span>新增的的內容<span>" </span>命令提交修改，並填入適合的提交訊息。</p>
<p>使用<span> git push </span>將本地的提交推送到遠端倉儲。</p>
<p></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">2.</span></span></strong><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用Codespaces 維護錢包與網站</span></span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/3eINkT8euc4?si=lgVGYJ-jE5tkto7l" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/41023155/cd2024/blob/main/downloads/11.58.txt">https://github.com/41023155/cd2024/blob/main/downloads/11.58.txt</a></p>
<p></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">在近端執行動態網站</span></span></strong><br/><strong></strong></p>
<p><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/UQAJtNkploA?si=p9iNYCuuhe-YBGXS" title="YouTube video player" width="560"></iframe></strong></p>
<p><strong><a href="https://github.com/41023155/cd2024/blob/main/downloads/14.18.txt">https://github.com/41023155/cd2024/blob/main/downloads/14.18.txt</a></strong></p>
<ol>
<li><span> SSH </span>金鑰： 使用<span> Puttygen </span>建立一把<span> SSH </span>金鑰並將其存儲為<span> .ppk </span>格式的檔案。</li>
</ol>
<p><span>2.SSH </span>金鑰導入<span> Putty</span>： 使用<span> Putty </span>將<span> SSH </span>金鑰導入，以便在遠端伺服器上進行身份驗證。</p>
<ol start="3">
<li><span> PuTTY </span>會話設定： 在<span> Regedit </span>中找到<span> HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\github.com </span>鍵，將其匯出為<span> .reg </span>檔案，這將保存你的<span> PuTTY </span>會話設定。</li>
</ol>
<p><span>4.</span>本地端進行改版：</p>
<p>切換到暫存目錄：</p>
<p><span>cd tmp</span></p>
<p>克隆倉庫：</p>
<p><span>git clone --recurse-submodules git@github.com:mdecd2024/2a-midag1.git</span></p>
<p>進入克隆的倉庫目錄：</p>
<p><span>cd 2a-midag1</span></p>
<p>進行修改和提交：</p>
<p><span># </span>進行修改<span>...</span></p>
<p><span>git add .</span></p>
<p><span>git commit -m "</span>自己要推的東西<span>"</span></p>
<p>推送到遠端倉庫：</p>
<p><span>git push</span></p>
<p><span>5.</span>其他使用者推送：</p>
<p>獲取你的<span> IPv4 </span>地址：</p>
<p><span>ipconfig</span></p>
<p>在組別下的<span> Python </span>腳本中導入你的<span> IPv4 </span>環境。</p>
<p>允許組別中的其他成員更新和推送修改。</p>
<p></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用 Replit 管理從 Classroom 取得的錢包錢包</span></span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ddvwsYU_g_o?si=rHjEjeRhJCqoQVyq" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/41023155/cd2024/blob/main/downloads/25.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/41023155/cd2024/blob/main/downloads/25.txt</span></span></a></p>
<h3>w4 2a hw2(w3</h3>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">w3</span></span></span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">期中友善分組報告</span></span></strong></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1. 如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組。</span></span></strong></p>
<p><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/SXq6d-gRFqE?si=qYDJGuMDZUGkb7TD" title="YouTube video player" width="560"></iframe></strong></p>
<p><strong><a href="https://github.com/41023110/cd2024/commit/78a29b510fe45364d0037da13b85f6f9d66727d9"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/41023110/cd2024/commit/78a29b510fe45364d0037da13b85f6f9d66727d9</span></span></a></strong></p>
<p><span style="background-color: #ffff99;"><strong></strong></span></p>
<p><span style="background-color: #ffff99;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組摘要：</span></span></strong></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">  在確保獲得相應權限後，便可進行克隆操作。通常，C槽更為迅速，故需切換至此並建立一個tmp文件夾。接著，使用git clone指令，以--子模組recurse+ssh+對應帳號的方式進行克隆。成功克隆後，可將倉庫設置為子模組。為了將倉庫設置為子模組，首先進入倉庫對應目錄，將所有數據拉取下來，然後執行git add命令。在分組倉庫底下，使用git子模組add命令，指定組倉庫名稱，並以https方式拉取子模組，因分組倉庫權限不足。可以拉取組員的倉庫。在個人更新時，可以分段拉取，未處理完的章節可不引入。在git push後，除了建立目錄外，也會更新.gitmodules檔案。在第二個人尚未建立子模組之前，可先進行克隆操作，將個人倉庫添加為子模組。之後，需處理.gitmodules檔案的衝突問題。</span></span><strong><br/></strong><strong>    </strong><span style="vertical-align: inherit;"></span><span style="background-color: #ffff99;"><strong><br/></strong></span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">2.如何將組員的個人倉儲納入分組倉儲成為子模組</span></span></strong><br/><strong></strong></p>
<p><strong></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/qT1_3cQ1ugU?si=L70OO6fnPHgjX440" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/41023110/cd2024/blob/509d3eccf7615221d7e813378c4319315a7c2a4d/downloads/20240320095241733.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/41023110/cd2024/blob/509d3eccf7615221d7e813378c4319315a7c2a4d/downloads/20240320095241733.txt</span></span></a></strong></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">將組員的個人倉儲設為分組倉儲子模組摘要：</span></span></strong></span></p>
<p><strong>    </strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">  利用組別倉儲下的codespaces，在確認主分支與當前分支同步後，使用git submodule add命令向倉儲中新增一個子模組。此命令需要指定子模組所在的倉儲網址以及學號，並在指定的目錄中複製子模組的資料。成功克隆後，將新增的子模組添加、提交、推送至倉儲，並確認子模組資料已加入倉儲中。子模組具有版本控制，可隨時進行開發並同步至主倉儲，版本控制由開發者自行決定。</span></span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">3.如何在 Replit 維護分組倉儲</span></span></strong></p>
<p><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/EDbiE8X_GA0?si=TzM1OLPb2hFl6c2D" title="YouTube video player" width="560"></iframe></strong></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/41023110/cd2024/blob/fffb684bd377a6ecedadfac25333c936b26c8ba4/downloads/w3-3%E6%96%87%E6%AA%94.txt">https://github.com/41023110/cd2024/blob/fffb684bd377a6ecedadfac25333c936b26c8ba4/downloads/w3-3%E6%96%87%E6%AA%94.txt</a><a href="https://github.com/41023110/cd2024/blob/fffb684bd377a6ecedadfac25333c936b26c8ba4/downloads/w3-3%E6%96%87%E6%AA%94.txt"></a></span></span></strong></p>
<p><strong><span style="background-color: #ffff00;"><span style="vertical-align: inherit;">如何在 Replit 維護分組倉儲日誌:</span></span></strong></p>
<p><span>     處理與Git和SSH相關的操作。獲取和安裝特定的子模塊，並準備環境以啟用編輯功能的步驟。在配置文件中權限很重要。接著創建和管理SSH密鑰以及將公鑰添加到特定的帳戶中。再來如何在Git中進行提交，並解決了由於權限問題和衝突。在操作過程中保持耐心和細心與定期備份數據的重要性。最後如何使用命令來移動和重命名文件，並通過上傳和移動文件來維護Git存儲庫。</span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">使用 Gitpod 維護與網站</span></span></strong></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1.</span></span><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">使用Gitpod維護個人網站</span></span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_28i9695wto?si=IL-9dHik64LgFM1z" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/41023110/cd2024/blob/8e809c4510f3d47b944bc751840fd3de25c1254f/downloads/%E4%B8%8A.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/41023110/cd2024/blob/8e809c4510f3d47b944bc751840fd3de25c1254f/downloads/%E4%B8%8A.html</span></span></a></p>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">使用 Gitpod 維護個人網站摘要：</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">     </span></span>使用Gitpod連結GitHub帳號，透過倉儲網址進入Gitpod後，若無對應的模組，需先執行chmod u+x init_replit進行模組安裝。儘管提供的資源與codespaces不同，但執行速度依然快速。在Gitpod中開啟python3，並具有多個終端機，程式將自動開啟瀏覽器進入編輯模式。即使未下載子模組，Gitpod仍會列出目錄，相較於codespaces功能稍好，且網址為亂碼式以保障安全性。</p>
<p>若需查看靜態內容，可新增一個終端機，執行python3並啟動http server，直接在8000埠號瀏覽器中開啟即可查看靜態內容。要關閉執行，可在Gitpod.io儀錶板中進行操作，點擊"stop"即可停止計算時間。</p>
<p></p>
<p><span style="vertical-align: inherit;">2.</span><strong><span style="vertical-align: inherit;">使用Gitpod維護分組網站</span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/M7r0aNDYa3o?si=g9V9kV34wsKROxwk" title="YouTube video player" width="560"></iframe></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/41023110/cd2024/blob/01b66a7ec89e5d2b1f89767e28ada795fc830b4b/downloads/w3-5.txt">https://github.com/41023110/cd2024/blob/01b66a7ec89e5d2b1f89767e28ada795fc830b4b/downloads/w3-5.txt</a><a href="https://github.com/41023110/cd2024/blob/01b66a7ec89e5d2b1f89767e28ada795fc830b4b/downloads/w3-5.txt"></a></span></span></strong></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">使用Gitpod維護分組網站:</span></span></strong></span></p>
<div><span>      進入Gitpod連結登陸github帳號。利用倉儲網址打開，裡面沒有對應的模組，所以要先chmod u+x init_replit安裝模組。其中給予的資源並不輸codespaces，執行速度依樣快速。照樣打開python3，並且也有多的終端機，程式一樣會自動開啟瀏覽器，就可以直接進入編輯。若假如沒有下載子模組，Gitpod一樣會幫忙列出目錄，比codespaces稍好些。並且網址也是亂碼式保全功能。</span></div>
<div><span>     要看靜態，新增一個終端機，然後用python3執行模組。啟動http server，直接啟動8000埠號瀏覽器幫你開啟，open就可看到靜態。</span></div>
<div><span>     要關閉執行，一樣在Gitpod.io儀錶板，可看到登陸與改變內容，需要關閉點stop就會停止計算時間。</span></div>
<p><strong>#有關 LaTeX 轉 pdf</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/MLt3zIu-73Q?si=Ac8AvyMQiGzbLC_V" title="YouTube video player" width="560"></iframe></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/41023110/cd2024/blob/509d3eccf7615221d7e813378c4319315a7c2a4d/downloads/latex.txt.txt">https://github.com/41023110/cd2024/blob/509d3eccf7615221d7e813378c4319315a7c2a4d/downloads/latex.txt.txt</a></span></span></strong></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">有關 LaTeX 轉 pdf日誌:</span></span></strong></span></p>
<p><span>      報告的主要內容通常放在團隊的Git倉庫中的downloads資料夾下。每個組員被分配了特定的任務，例如撰寫摘要、引言等。任務分配完成後，組員需要將自己的工作上傳到團隊的Git倉庫中，以便其他成員可以查看和整合。</span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">#設定網志</span></span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/81LNpVtI8sM?si=W7J4fABzLi4kRN-v" title="YouTube video player" width="560"></iframe></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/mdecd2024/2a-midag8/blob/main/downloads/2a_1.txt">https://github.com/mdecd2024/2a-midag8/blob/main/downloads/2a_1.txt</a></span></span></strong></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">設定網志日誌:</span></span></strong></span></p>
<p><span>     了解網誌的原始文稿通常存放在Markdown目錄下，轉換為HTML檔案後存放在Blog目錄下。使用Pelican套件進行轉換，並根據不同需求設定不同的配置檔案，如local_publishconf.py和publishconf.py。這些配置檔案包含了網址、作者、網誌標題等信息，並根據需求設置絕對或相對路徑。另外，網誌內容需要按照一定的格式編寫，包括日期、標題、摘要、內容等。完成編寫後，使用gen_blog工具進行轉換，確認無誤後提交到GitHub上。</span></p>
<h3>w4 2a hw2(w4</h3>
<p><strong></strong><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">w4</span></span></span></p>
<p><strong>Replit 靜態網站檢視</strong></p>
<p><strong></strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1.如何在 Replit 檢視靜態網站</span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Qijdl_zB2wg?si=NxSnq6vGRmN6WlYB" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/mdecd2024/2a-midag8/blob/main/downloads/20240316214357460.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecd2024/2a-midag8/blob/main/downloads/20240316214357460.txt</span></span></a></p>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如何在 Replit 檢視靜態網站 </span></span></span><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">摘要：</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">根據w2建立replit個人帳戶並與以太坊做身份認證後，開始以replit維護以太坊</span></span><span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，因為動態網站中的轉靜態按紐無法再執行檢視功能，否則靜態動態無法在一個網址做開啟，需分開，靜態網站檢視以python3 main2.py開啟，動態以python3 main.py開啟。</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">-------------------------------------------------- -------------------------------------------------- ------</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">2.如何下載replit_main2.7z並在錢包中建立兩個文件</span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/8HV4LlRK-nw?si=3hoqcDW0ADr7gYuo" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240319092559049.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/KEHUUEISIN/cd2024/blob/main/downloads/20240319092559049.txt</span></span></a></p>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如何下載replit_main2.7z並在錢包中建立兩個文件</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">以上上部影片內容將兩個7z下載</span></span><span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，並在以太坊中創建兩個文件，並且要啟動跟關掉，注意</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">！</span></span></p>
<h3>w4 2b hw2(w1</h3>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2024_2b_3_如何設定Github帳號的雙重認證</span></span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-ZmDQZ9ZV-Y?si=6iLLUk9DOYv3xDem" title="YouTube video player" width="560"></iframe></p>
<div class="Box-sc-g0xbh4-0 drtGBr" data-testid="latest-commit">
<div class="Box-sc-g0xbh4-0 fqNQBl react-last-commit-message"></div>
</div>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">上傳cd2024_2b_2_如何從Replit帳戶設定連結連結到Github txt檔</span></span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Hpy1xeF0y0s?si=1A08kjKaEoTC4Vnl" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/mdecd2024/2a-midag8/commit/4f7c5a3b1c822fb91dddbf57a0bb5a6f712f0fb6"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecd2024/2a-midag8/commit/4f7c5a3b1c822fb91dddbf57a0bb5a6f712f0fb6</span></span></a></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">將個人錢包 import 至 Replit(上)</span></span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/cf3OuPL-JIo?si=_ugX0bYCgyKNZtxD" title="YouTube video player" width="560"></iframe></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">將個人錢包 import 至 Replit(上)</span></span></strong></p>
<p><strong><a href="https://github.com/mdecd2024/2a-midag8/commit/c46882f9ce10c6761cbf52688ef24fa76b69b524"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_swU_pHUOUM?si=d6ZIgzOeeIOP6ZLl" title="YouTube video player" width="560"></iframe><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecd2024/2a-midag8/commit/c46882f9ce10c6761cbf52688ef24fa76b69b524</span></span></a></strong></p>
<h3>w4 2b hw2(w2</h3>
<h3>w4 2b hw2(w3</h3>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">w3</span></span></span></p>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">期中協同分組報告教學範例:</span></span></span></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1.如何將組員的個人倉儲納入分組倉儲成為子模組</span></span></strong><br/><strong></strong></p>
<p><strong></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/qT1_3cQ1ugU?si=L70OO6fnPHgjX440" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/41023110/cd2024/blob/509d3eccf7615221d7e813378c4319315a7c2a4d/downloads/20240320095241733.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/41023110/cd2024/blob/509d3eccf7615221d7e813378c4319315a7c2a4d/downloads/20240320095241733.txt</span></span></a></strong></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如何將組員的個人倉儲納入分組倉儲成為子模組摘要：</span></span></strong></span></p>
<p><strong>   <span> </span></strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> 利用組別倉儲下的codespaces，在確認主分支與當前分支同步後，使用git submodule add命令向倉儲中新增一個子模組。子模組具有版本控制，可隨時進行開發並同步至主倉儲，版本控制由開發者自行決定。<br/></span></span></p>
<p>2.如何在 Replit 維護分組倉儲</p>
<p><span><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/EDbiE8X_GA0?si=TzM1OLPb2hFl6c2D" title="YouTube video player" width="560"></iframe></span></p>
<p><span style="background-color: #ffff00;">如何在 Replit 維護分組倉儲摘要:</span></p>
<p><span style="background-color: #ffff00;"><span> </span></span></p>
<p><span style="background-color: #ffff00;"><span>使用 Gitpod 維護倉儲與網站</span></span></p>
<p><strong><span style="vertical-align: inherit;">1.使用Gitpod維護個人網站</span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_28i9695wto?si=IL-9dHik64LgFM1z" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/41023110/cd2024/blob/8e809c4510f3d47b944bc751840fd3de25c1254f/downloads/%E4%B8%8A.html"><span style="vertical-align: inherit;">https://github.com/41023110/cd2024/blob/8e809c4510f3d47b944bc751840fd3de25c1254f/downloads/%E4%B8%8A.html</span></a></p>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;">使用 Gitpod 維護個人網站摘要：</span></span></p>
<p><span style="vertical-align: inherit;">      使用Gitpod連結GitHub帳號，透過網關網址進入Gitpod後，若無對應的模組，需先執行chmod u+x init_replit進行模組安裝。中開啟python3，並附有終端機，程式將自動開啟多個瀏覽器進入編輯模式。性。</span></p>
<p><span style="vertical-align: inherit;">     若需查看靜態內容，可新增一個終端機，執行python3並啟動http伺服器，直接在8000連接埠瀏覽器中開啟即可查看靜態內容。停止”即可停止計算時間。</span></p>
<p><span style="vertical-align: inherit;">4.</span><strong><span style="vertical-align: inherit;">使用Gitpod維護分組網站</span></strong></p>
<p> <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/M7r0aNDYa3o?si=g9V9kV34wsKROxwk" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/41023110/cd2024/blob/01b66a7ec89e5d2b1f89767e28ada795fc830b4b/downloads/w3-5.txt"><span style="vertical-align: inherit;">https://github.com/41023110/cd2024/blob/01b66a7ec89e5d2b1f89767e28ada795fc830b4b/downloads/w3-5.txt</span></a></strong></p>
<p><strong><span style="vertical-align: inherit;"> </span></strong></p>
<p><strong><span style="vertical-align: inherit;"></span></strong><span style="vertical-align: inherit;"></span><span style="background-color: #ffff99;"><strong></strong></span><strong><br/></strong><strong>   </strong><span style="vertical-align: inherit;"></span><span style="background-color: #ffff99;"><strong><br/></strong></span></p>
<p><strong><span style="vertical-align: inherit;"></span></strong></p>
<p><strong><span style="vertical-align: inherit;"></span></strong></p>
<p><span style="background-color: #ffff00;"><strong><span style="vertical-align: inherit;">有關 LaTeX 轉 pdf</span></strong></span></p>
<p><strong><span style="vertical-align: inherit;">1.如何利用 LaTeX 編寫分組期中報告</span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-MK8MdWXqSg?si=qeEJDnfYkmS1Z7es" title="YouTube video player" width="560"></iframe></p>
<p><strong><span style="vertical-align: inherit;"><a href="https://github.com/41023110/cd2024/blob/main/downloads/w3-b-5.txt">https://github.com/41023110/cd2024/blob/main/downloads/w3-b-5.txt</a> </span></strong></p>
<p><strong><span style="vertical-align: inherit;">設定網志</span></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/81LNpVtI8sM?si=W7J4fABzLi4kRN-v" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="https://github.com/mdecd2024/2a-midag8/blob/main/downloads/2a_1.txt"><span style="vertical-align: inherit;">https://github.com/mdecd2024/2a-midag8/blob/main/downloads/2a_1.txt</span></a></strong></p>
<h3>w4 2b hw2(w4</h3>
<p><strong>Odoo 參考文章中英並列</strong></p>
<p><strong>1.以第六組為例, 利用 Codespaces 維護倉儲內容</strong></p>
<p><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dvASd8GCuXA?si=rIqUmHGgk3Vs55sz" title="YouTube video player" width="560"></iframe></strong></p>
<p><strong><a href="https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240426003837164.txt">https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240426003837164.txt</a></strong></p>
<p><span style="background-color: #ffff99;"><strong>摘要:</strong></span></p>
<p><strong>2.如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告</strong></p>
<p><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/fiuucRC7RQg?si=9phP5Sw3rQEmx0d3" title="YouTube video player" width="560"></iframe></strong></p>
<p><strong><a href="https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240427223554128.txt">https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240427223554128.txt</a></strong></p>
<p><span style="background-color: #ffff99;"><strong>摘要:</strong></span></p>
<p><strong>3.如何利用 Gitpod 加上 token 取得分組倉儲權限</strong></p>
<p><strong><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/KRuWZgbiNYs?si=d6LVo_MxzFq730An" title="YouTube video player" width="560"></iframe></strong></p>
<p><strong><a href="https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240426095652300.txt">https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240426095652300.txt</a></strong></p>
<p><span style="background-color: #ffff99;"><strong>摘要:</strong></span></p>
<p><strong>Replit 靜態網站檢視</strong></p>
<p><strong></strong><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">沿用2a w4</span></span></span></p>
<p><strong>Replit 靜態網站檢視</strong></p>
<p><strong></strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1.如何在 Replit 檢視靜態網站</span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Qijdl_zB2wg?si=NxSnq6vGRmN6WlYB" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/mdecd2024/2a-midag8/blob/main/downloads/20240316214357460.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecd2024/2a-midag8/blob/main/downloads/20240316214357460.txt</span></span></a></p>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如何在 Replit 檢視靜態網站 </span></span></span><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">摘要：</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">根據w2建立replit個人帳戶並與以太坊做身份認證後，開始以replit維護以太坊</span></span><span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，因為動態網站中的轉靜態按紐無法再執行檢視功能，否則靜態動態無法在一個網址做開啟，需分開，靜態網站檢視以python3 main2.py開啟，動態以python3 main.py開啟。</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">-------------------------------------------------- -------------------------------------------------- ------</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">2.如何下載replit_main2.7z並在錢包中建立兩個文件</span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/8HV4LlRK-nw?si=3hoqcDW0ADr7gYuo" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/KEHUEISIN/cd2024/blob/main/downloads/20240319092559049.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/KEHUUEISIN/cd2024/blob/main/downloads/20240319092559049.txt</span></span></a></p>
<p><span style="background-color: #ffff00;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如何下載replit_main2.7z並在錢包中建立兩個文件</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">以上上部影片內容將兩個7z下載</span></span><span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，並在以太坊中創建兩個文件，並且要啟動跟關掉，注意</span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">！</span></span></p>
<h2>w5 Task</h2>
<p>統整各週網誌</p>
<p><span><span style="color: #ff0000;">這部分內容與blog上一致:</span>將組員個人網誌納入分組倉儲目錄下，並持續更新各影片剪輯後製，在嶔入影片過程中多次校正文檔，我們使用的軟體是https://www.capcut.com/my-edit這個軟體，目前字幕只支援簡體中文所以我們必須在翻完後再重新拉回進度條去逐字更改翻錯的內容及將簡體字改成繁體字，20分鐘以上的影片通常都會要剪上1hr以上時間。</span></p>
<h2>w6 Task</h2>
<p>將w4-w5影片剪輯內容上繳至回報區，並指派w6 NX相關零件檔繪製內容<span>以及 CoppeliaSim 場景模擬相關檔案格式作業給與各組員</span></p>
<h2>w10 Task</h2>
<p><span style="background-color: #ffff00;">任務一:</span>建立各班學員的倉儲、網站與分組連結</p>
<p><span style="color: #ff0000;"><strong>老師寫的:</strong></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">from browser import window, ajax, document, html

def fetch_csv_data():
  # CSV 檔案網址
  url = "https://mdecd2024.github.io/2astud-2asite/downloads/2a.txt"
  
  def on_complete(req):
    if req.status == 200 or req.status == 0:
      # 讀取 CSV 檔案內容
      content = req.text
  
      # 依照換行符號拆分資料
      lines = content.split('\n')
  
      # 建立空列表儲存資料
      data = []
  
      # 遍歷每一行資料
      for line in lines:
        # 忽略空白行
        if line.strip() == "":
          continue
  
        # 依照逗號拆分資料
        items = line.split(',')
  
        # 將拆分後的資料加入列表
        data.append(items)
      
      # 必須去除 data 的第一列標題資料, 只取序號為 1 之後的資料
      data = data[1:]
  
      # 取得 html 可以插入的標註位置
      brython_div = document["brython_div1"]
      course_title = "cd2024"

      # 逐一處理學員資料
      index = 0
      for items in data:
        index += 1
        student_id, github_username, group = items
        
        if github_username == "":
          github_username = "000"
        
        # 建立網站和倉儲連結，使用正確的模板
        site_url = f"https://{github_username}.github.io/{course_title}"
        repo_url = f"https://github.com/{github_username}/{course_title}"
        group_site_url = f"https://mdecd2024.github.io/2a-midag{group}"
        group_repo_url = f"https://github.com/mdecd2024/2a-midag{group}"

        # 添加學號, 網站, 倉儲連結和序號到 brython_div
        brython_div &lt;= str(index) + ". " + html.A(student_id, href=site_url)
        brython_div &lt;= " ("
        brython_div &lt;= html.A("repo", href=repo_url)
        brython_div &lt;= ") | " 
        brython_div &lt;= html.A("Group Site", href=group_site_url)
        brython_div &lt;= " | "
        brython_div &lt;= html.A("Group Repo", href=group_repo_url)
        brython_div &lt;= html.BR()

    else:
      print("Error:", req.text)
  
  # 發送 AJAX 請求
  req = ajax.ajax()
  req.bind('complete', on_complete)
  req.open('GET', url, True)
  req.set_header('content-type', 'application/x-www-form-urlencoded')
  req.send()
  
# 呼叫函式讀取 CSV 資料
fetch_csv_data()</pre>
<p><span style="color: #ff0000;"><strong>chatgpt相似不同寫法程式碼:</strong></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">from browser import ajax, document, html

def fetch_csv_data():
    # CSV 文件的 URL
    url = "https://mdecd2024.github.io/2astud-2asite/downloads/2a.txt"

    def on_complete(req):
        if req.status == 200 or req.status == 0:
            # 读取 CSV 文件内容
            content = req.text

            # 解析 CSV 数据并去除标题行
            data = [line.strip().split(',') for line in content.split('\n')[1:] if line.strip()]

            # 获取 HTML 中的标记位置
            brython_div = document["brython_div1"]
            course_title = "cd2024"

            # 生成学生信息链接并添加到 brython_div 中
            for index, (student_id, github_username, group) in enumerate(data, start=1):
                github_username = github_username if github_username else "000"
                site_url = f"https://{github_username}.github.io/{course_title}"
                repo_url = f"https://github.com/{github_username}/{course_title}"
                group_site_url = f"https://mdecd2024.github.io/2a-midag{group}"
                group_repo_url = f"https://github.com/mdecd2024/2a-midag{group}"

                brython_div &lt;= f"{index}. " + html.A(student_id, href=site_url)
                brython_div &lt;= " ("
                brython_div &lt;= html.A("repo", href=repo_url)
                brython_div &lt;= ") | "
                brython_div &lt;= html.A("Group Site", href=group_site_url)
                brython_div &lt;= " | "
                brython_div &lt;= html.A("Group Repo", href=group_repo_url)
                brython_div &lt;= html.BR()

        else:
            print("Error:", req.text)

    # 发送 AJAX 请求
    req = ajax.ajax()
    req.bind('complete', on_complete)
    req.open('GET', url, True)
    req.set_header('content-type', 'application/x-www-form-urlencoded')
    req.send()

# 调用函数读取 CSV 数据
fetch_csv_data()
</pre>
<p></p>
<p><span style="color: #ff0000;">兩者差別:</span></p>
<p><span>這段代碼與之前的代碼相比，主要的改進在於我要求其精簡化，相比之前73行，這段精簡程式碼只有47行 及可做跟73行相同方式列出學員數據，寫法講解如下。</span></p>
<ul>
<li><span>使用列表推導式來解析 CSV 數據，並在生成學生信息時省略了對空白行的額外判斷。</span></li>
<li><span> 直接在 enumerate() 函數中指定 start=1，不再單獨定義 index 變量。 </span></li>
<li><span>使用條件表達式統一處理 GitHub 用戶名的空值情況。</span></li>
</ul>
<h3>w10 task2</h3>
<p><span style="background-color: #ffff00;">任務二:</span>鋼球平衡台 PID 控制與模擬</p>
<p><strong><span style="color: #ff0000;">PDF1</span></strong>: <a href="/downloads/cd2024_2D Ball Balancer Control using QUARC.pdf">2D Ball Balancer Control using QUARC。</a></p>
<p><span style="color: #993366;">摘要:<span style="color: #000000;">從前言部分可知此份報告主要是在找<span>2D球平衡器實驗的目標是將球穩定到平衡板上的所需位置。並使用比例-積分-微分（PID）控制器等，設計了一個控制系統來滿足一系列規格要求。算實驗記錄、研究手冊，且他涵蓋的主題有八大項，分別為下列幾項:</span></span></span></p>
<ul>
<li>從第一原理建模球的動力學。</li>
<li>獲取系統的傳遞函數表示。</li>
<li>設計一個比例-速度（PV）補償器，以根據特定的時間域要求控制伺服負載軸的位置。</li>
<li>設計一個比例-積分-微分（PID）補償器，以調節樑上球的位置並滿足特定的規格要求。這與伺服控制一起形成完整的球和樑串級控制系統。</li>
<li>探索控制技術，如設定點權重和積分器反飽和。</li>
<li>使用植物模型模擬球和樑控制，並確保滿足規格要求，而不會發生任何致動器飽和。</li>
<li>在Quanser 2DBB設備上實施控制器並評估其性能。<span style="color: #993366;"><span style="color: #000000;"><span></span></span></span></li>
</ul>
<p><strong><span><span style="color: #ff0000;">PDF2</span>:<a href="/downloads/cd2024_Ball_on_the_plate_balancing_control_system.pdf">cd2024_Ball_on_the_plate_balancing_control_system</a></span></strong></p>
<p><span style="color: #993366;">摘要</span><span style="color: #993366;">:<span style="color: #000000;">此報告內容要探討平衡相關問題，且這是一個需要持續的研究領域，它可應用於從教育到運輸等許多領域。雙自由度球平衡實驗台對於控制系統的理解是一個重要的關鍵。此文關注於平衡球在板上的機械設計和控制算法。該軟件配備了用於球位置數據采集的電阻觸摸屏，帶有位置傳感器的步進電機用於平台傾角反饋數據，並且基於AVR微控制器的雙環從屬控制系統，其中包含PID控制器以維持球的位置。此次實驗所用機臺是在聖彼得堡電氣工程大學“LETI”的自動控制系統系組裝和設計的。整體來說就是希望<span>將來可以應用在更多科學和技術領域上。</span></span></span></p>
<p><strong><span><span style="color: #ff0000;">PDF3</span>:<a href="/downloads/cd2024_Design and Implementation a Ball Balancing System for Control Theory Course.pdf">cd2024_Design and Implementation a Ball Balancing System for Control Theory Course</a></span></strong></p>
<p><span style="color: #993366;">摘要:<span style="color: #000000;">跟著前兩項相關內容第3個報告檔是在<span>開發一種球平衡系統，利用微控制器和相關控制算法實時調整樑的角度，以保持球在樑上的平衡。通過閉環實時控制系統和調節參數，系統可以減小實際位置與預期位置之間的誤差。此團隊製作了三個原型並進行了比較，使用了整個系統包括一個伺服電機、一個距離傳感器、一個微控制器板和一個機械平台。當然此系統可用於教學，幫助學生理解PID控制原理，並通過微控制器編程實現控制算法。對於不熟悉MATLAB的學生，此團隊開發了界面程序，在MATLAB中實時繪製位置曲線。這個簡化的系統有助於連接理論知識和實踐技能。該方法也適用於更複雜的系統。</span></span></span></p>
<p><strong><span><span style="color: #ff0000;">PDF4</span>:<a href="/downloads/cd2024_Simulation_and_Experimental_Study_of_Ball_Position.pdf">cd2024_Simulation_and_Experimental_Study_of_Ball_Position</a></span></strong></p>
<p><span style="color: #993366;">摘要:<span style="color: #000000;">本文介紹了一種基於兩軸平台的球平衡系統，宗旨在實時調整平台角度以保持球的平衡。這種系統的應用在控制理論中具有非常重要意義，通過該系統可以觀察控制結構的行為並找到它的極限。這種控制結構在國防軍事技術、攝像機穩定、無人機控制等領域被廣泛應用。另外基準系統是由兩台直流電機組成，控制單元使用Kinetis K60數字信號控制器，並通過電阻觸摸面板獲取被試者的位置。與光學或激光技術相比，電阻觸摸面板具有更快的響應速度，這使得它在自動調節方面更具優勢。該方法可用於教學和高端應用，並為理論知識與實踐技能的連接提供了一個簡單而有效的工具。</span></span></p>
<p><strong><span><span style="color: #ff0000;">PDF5</span>:<a href="/downloads/cd2024_A real time control system for balancing a ball on a platform with FPGA parallel implementation.pdf">cd2024_A real time control system for balancing a ball on a platform with FPGA parallel implementation</a></span></strong></p>
<p><span style="color: #993366;">摘要:<span style="color: #000000;">此份報告提出了一個新的基於PID調節器的解決方案，用於實時增加平台上球位置調節的準確性的科學和實踐問題。首先，發展了平衡球在平台上的傳遞函數。其次，合成了用於平衡平台上的球的PID調節器。然後，設計了在FPGA上進行並行計算的PID調節器實現。最後，通過自然模擬驗證了增加調節平台上球位置準確性的有效性。</span></span></p>
<p><strong><span><span style="color: #ff0000;">PDF6</span>:<a href="/downloads/cd2024_Construction and theoretical study.pdf">cd2024_Construction and theoretical study</a></span></strong></p>
<p><span style="color: #993366;">摘要:<span style="color: #000000;">在動態系統領域中，控制理論及其應用至關重要，特別是在補償對於本質上不穩定或半穩定的系統施加的干擾和外部作用方面。通過物理裝置的實際構建作為理論的演示器，進一步比較基於牛頓力學的實際物理和計算機模擬結果。為了進行比較，需要設計一個能夠滿足系統要求的令人滿意的控制器。就裝置和控制而言，引入了一種用於平衡平台上的球的比例-積分-微分控制器。進一步分析以確定在穩定本身不穩定或半穩定系統時的限制。此外，還要研究這些方法的效果。</span></span></p>
<p></p>
<p><span style="background-color: #ffff00;">總結論</span>:關於上面六篇PDF報告探討內容大同小異，幾乎都是在講平衡器相關，從報告的摘要、前言、介紹大部分會知道報告內容研究方向，有些甚至已經算是研究手冊了，且能發展的領域都很廣。</p>
<h3>w10 task3 (無python版</h3>
<p><span style="background-color: #ffff00;">任務三:</span>鋼球平衡台零組件繪圖</p>
<p>零件<a href="/downloads/鋼球平衡台零組件.zip">下載</a></p>
<p><img alt="" height="316" src="/images/螢幕擷取畫面 2024-05-05 222850.png" width="450"/></p>
<p><span style="background-color: #ffff00;">影片如下:</span></p>
<p><span style="color: #ff0000;">base_w.prt :</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/mKBHnuFQ76Y?si=3NqSX2K8eEZkDjtU" title="YouTube video player" width="560"></iframe></p>
<p><span style="color: #ff0000;">platform.prt :</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ice-YsYdZNY?si=K_pJMsA6ODVgcdBk" title="YouTube video player" width="560"></iframe></p>
<p><span style="color: #ff0000;">s_link.prt :</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/oktuIh3_UBI?si=PdT-gUaSKdKQpMMc" title="YouTube video player" width="560"></iframe></p>
<p><span style="color: #ff0000;">shaft.prt :</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Q4u8uiwYrh0?si=T_9PsSkQorjEpIAI" title="YouTube video player" width="560"></iframe></p>
<p><span style="color: #ff0000;">y_link.prt :</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/IIVxinaajrU?si=kJyKFsM9P22R_95s" title="YouTube video player" width="560"></iframe></p>
<p><span style="color: #ff0000;">all.prt :</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/vvbjTDYkaXs?si=vul1yOXdhFsshqbu" title="YouTube video player" width="560"></iframe></p>
<h3>w10 task3 (python版</h3>
<p>此處連結可分別導至各組員<span style="background-color: #ffff00;">w12 task1</span>個人網站相關頁面:</p>
<p><a href="https://kehueisin.github.io/cd2024/content/w12%20task1.html">41023108 繪製零件</a></p>
<p><a href="https://41023110.github.io/cd2024/content/w12.html">41023110 繪製零件</a></p>
<p><a href="https://41023155.github.io/cd2024/content/w10.html">41023155 繪製零件</a></p>
<p><a href="https://wmrtbij49h.github.io/cd2024/content/w10%20task.html">41023211 繪製零件</a></p><h2>w12 task</h2>
<p>此部分和前面的w10-w11合併一起</p>
<p>若要繪製python版零組件教學如下範例影片所示:</p>
<p><span style="color: #ff0000;">建立 block 與挖孔</span></p>
<p><span style="color: #ff0000;"></span> <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XVTnEnrcbis?si=t_ex6DKhN8j2Q0o1" title="YouTube video player" width="560"></iframe></p>
<h3>w12 task2</h3>
<h3>w12 task3</h3>
<p><span style="background-color: #ff6600;">在執行前須先安裝Python 模組</span>: pip install pyzmq cbor keyboard</p>
<p><span style="background-color: #ffcc00;">網頁開啟</span>:http://<span>IP位置</span>:23020 </p>
<p>控制整個場景的judge.py檔，唯一更動部分只有client = RemoteAPIClient('IP位置', 23000)這行括號中的Ip位置。</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from zmqRemoteApi import RemoteAPIClient
from zmqRemoteApi_IPv6 import RemoteAPIClient
import keyboard
import random

client = RemoteAPIClient('球場所在電腦_IP_位址或符號名稱', 23000)

print('Program started')
sim = client.getObject('sim')
sim.startSimulation()
print('Simulation started')

def avoid(x,y):
    #bubbleRob = sim.getObject('/brickRob')
    #bubbleRob2 = sim.getObject('/brickRob2')
    #b1=sim.getObjectPosition(bubbleRob,-1)
    #b2=sim.getObjectPosition(bubbleRob2,-1)
    
    #while (((b1[0]&lt;x+0.5) and (b1[0]&gt;x-0.5)) and ((b1[1]&lt;y+0.5) and (b1[1]&gt;y-0.5)))or(((b2[0]&lt;x+0.5) and (b2[0]&gt;x-0.5)) and ((b2[1]&lt;y+0.5) and (b2[1]&gt;y-0.5))):
    #x=random.uniform(-1,1)
    #y=random.uniform(-1,1)
       # print(x)
       # print(y)
    position2= [x, y, 2]
    ball = sim.createPureShape(1, options, size, 1, None)
    sim.setObjectPosition(ball, -1, position2)
    
size = [0.1, 0.1, 0.1]
position = [0, 0, 2]
options = 8
def existball():
    try:
        Sphere= sim.getObject('/Sphere')
    except Exception as e:
        #print("Failed to get object: ", e)
        return 1
    return 0

if existball()==1:    
    ball = sim.createPureShape(1, options, size, 1, None)
    sim.setObjectPosition(ball, -1, position)
    ball = sim.getObject('/Sphere')
    sim.setObjectSpecialProperty(ball, sim.objectspecialproperty_detectable)

while True:

    ball = sim.getObject('/Sphere')
    ball_position =sim.getObjectPosition(ball,-1)
    if ball_position[1]&lt;-1.865 or ball_position[1]&gt;1.865:
        #sim.removeObject(ball)
        sim.setObjectAlias(ball, 'ball')
        ball2=sim.getObject('/ball')
        sim.removeObject(ball2)
        avoid(random.uniform(-1,1),random.uniform(-1,1))
        #avoid(0,2)
        ball = sim.getObject('/Sphere')
        sim.setObjectSpecialProperty(ball, sim.objectspecialproperty_detectable)
 




</pre>
<p></p>
<p>各球員控制是player.py這個檔，跟上面一樣改的差不多，就是球員編號部分要改成相應的玩家。</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor keyboard
from zmqRemoteApi import RemoteAPIClient
from zmqRemoteApi_IPv6 import RemoteAPIClient
import keyboard
import random
import math



client = RemoteAPIClient('球場所在電腦_IP_位址或符號名稱', 23000)
#client = RemoteAPIClient('2001:288:6004:17:2023:cda:4:6', 23000)

print('Program started')
sim = client.getObject('sim')
#sim.startSimulation()
print('Simulation started')

v=8
a=40

#選擇控制的球員 ## 此處要注意!!
player='/a_player1'
#player='/a_player2'
#player='/a_player3'
#player='/a_player4'
#player='/b_player1'
#player='/b_player2'
#player='/b_player3'
#player='/b_player4'



def setVelocity(lfwV, rfwV,lbwV, rbwV):
    leftMotor1 = sim.getObject(player+'/joint_lf')
    rightMotor1 = sim.getObject(player+'/joint_rf')
    leftMotor2 = sim.getObject(player+'/joint_lb')
    rightMotor2 = sim.getObject(player+'/joint_rb')
    sim.setJointTargetVelocity(leftMotor1, lfwV)
    sim.setJointTargetVelocity(rightMotor1, rfwV)
    sim.setJointTargetVelocity(leftMotor2, lbwV)
    sim.setJointTargetVelocity(rightMotor2, rbwV)
    #輸入四個變數分別給四個軸速度
    
def setangel(y):
    ontology= sim.getObject(player)
    angel = [-90*math.pi/180, y*math.pi/180, 0*math.pi/180]
    leftMotor = sim.getObject(player+'/joint_lf')
    rightMotor = sim.getObject(player+'/joint_rf')
    sim.setObjectOrientation(leftMotor, ontology, angel)
    sim.setObjectOrientation(rightMotor, ontology, angel)
    #輸入一個變數改變前輪方向
def controlangel(y):
    if keyboard.is_pressed('a'):
        setangel(-y)
    elif keyboard.is_pressed('d'):
        setangel(y)
    else:
        setangel(0)
def turnover():
    floor= sim.getObject('/Floor')
    player1 = sim.getObject(player)
    a=sim.getObjectOrientation(player1,floor)
    b=sim.getObjectPosition(player1,floor)
    a[0]=0
    a[1]=0
    b[2]=0.3
    sim.setObjectPosition(player1,floor,b)
    sim.setObjectOrientation(player1,floor,a)
def playercontrol(x,y):
    if keyboard.is_pressed('w'):
        setVelocity(x,x,x,x)
        controlangel(y)
    elif keyboard.is_pressed('s'):
        setVelocity(-x,-x,-x,-x)
        controlangel(y)
    elif keyboard.is_pressed('a'):
        setVelocity(-x,x,-x,x)
    elif keyboard.is_pressed('d'):
        setVelocity(x,-x,x,-x)
    elif keyboard.is_pressed('space'):
        turnover()
    elif keyboard.is_pressed('q'):
        # stop simulation
        sim.stopSimulation()
    else:
        setVelocity(0, 0, 0, 0)
        setangel(0)
  
while True:
    if keyboard.is_pressed('shift'):
        playercontrol(v+4,a-20)
    else:
        playercontrol(v,a)</pre>
<p></p>
<p><span style="color: #ff0000;">實際操作影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/A_9gcsR0Hqc?si=CNrHJs3u0698txu9" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #ffcc00;">問題探討:</span></p>
<p>我們這組只有4位組員，所以我將另外4台車子刪除，其中在刪除<span>player.py這個檔時，沒注意到車子編碼，導致在執行player這個檔案一直出錯，後將車子相應程式碼改回就能做動，這部分在執行時，要特別注意!!!</span></p><h1>blog</h1>
<p><span style="color: #ff0000;">Replit/Codespaces</span></p>
<ol>
<li>
<p><code>chmod u+x gen_blog</code>:</p>
<ul>
<li><code>chmod</code> 是用於改變文件或目錄的權限設置的命令。</li>
<li><code>u+x</code> 表示為擁有該文件的用戶（User）增加可執行（Execute）的權限。</li>
<li><code>gen_blog</code> 是要設置權限的文件或可執行程序的名稱。</li>
</ul>
<p>總之，這個命令將 <code>gen_blog</code> 這個文件的用戶（擁有者）設置為可執行的。</p>
</li>
<li>
<p><code>./gen_blog</code>:</p>
<ul>
<li><code>./</code> 表示當前目錄（Working Directory），也就是這個命令所在的目錄。</li>
<li><code>gen_blog</code> 是要執行的可執行文件或腳本。</li>
</ul>
<p>當你運行這個命令時，系統將查找當前目錄中的 <code>gen_blog</code> 文件，並執行它。這通常用於運行可執行文件或腳本。</p>
</li>
</ol>
<p>綜合起來，這兩個命令的組合是：</p>
<ol>
<li>將 <code>gen_blog</code> 文件設置為可執行。</li>
<li>執行 <code>gen_blog</code> 文件，通常用於運行一個生成或處理網站的腳本或命令。</li>
</ol>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">chmod u+x gen_blog <span></span>
./gen_blog   #網誌推到靜態網站指令</pre>
<p><span>localhost(可攜環境</span></p>
<p>以下指令是使用 Pelican 的命令行指令，用於將 Markdown 文件轉換為靜態網站，並將結果輸出到名為<span> </span><code>blog</code><span> </span>的目錄中。讓我來解釋一下每個部分的含義：</p>
<ul>
<li><code>pelican</code>: 這是 Pelican 靜態網站生成器的命令行工具。</li>
<li><code>markdown</code>: 指定要處理的標記語言為 Markdown，這意味著要轉換的文件是 Markdown 格式的。</li>
<li><code>-o blog</code>: 這個選項指定輸出目錄，即將生成的靜態網站文件輸出到名為<span> </span><code>blog</code><span> </span>的目錄中。</li>
<li><code>-s local_publishconf.py</code>: 這個選項指定了一個配置文件，用於指導 Pelican 如何生成網站。在這個例子中，指定的是<span> </span><code>local_publishconf.py</code><span> </span>配置文件。這個文件通常包含了一些設置，比如指定主題、插件、輸出路徑等。</li>
</ul>
<p>總的來說，這個命令告訴 Pelican 使用 Markdown 格式的文件，根據<span> </span><code>local_publishconf.py</code><span> </span>配置文件的指示，將生成的靜態網站文件輸出到<span> </span><code>blog</code><span> </span>目錄中。</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">pelican markdown -o blog -s local_publishconf.py #網誌推到靜態網站指令</pre>
<h2>Blog 2</h2>
<p>分組網誌統整指令為下面html檔</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">pelican combined_markdown -o blog -s local_publishconf.py</pre>
<p>我先在近端資料夾中建立一個gen_cblog.bat的批次檔，每次抓取各組員網誌內容時，直接在小黑窗輸入<span>gen_cblog.bat指令則會自動跑上面html檔程式碼。無須特別記程式碼</span></p>
<h1>Exercise</h1>
<p>此頁面用來放置練習題標題網頁內容</p>
<p><span style="background-color: #ffff00;">練習1</span>對映網頁1</p>
<p><span><span style="background-color: #ffff00;">練習2</span>對映網頁2</span></p>
<p><span><span style="background-color: #ffff00;">練習3</span>對映網頁3</span></p>
<h2>1</h2>
<p><strong><span style="background-color: #ffff00;">練習1</span>:請各分組製作一個 Web-based 網誌與簡報, 該如何利用隨身碟、 <a href="https://replit.com/">Replit</a> 與 <a href="https://www.google.com/search?q=github+codespaces">Codespaces</a> 中維護個人與分組的網站內容?</strong></p>
<p><strong><span style="background-color: #ff0000;">答:</span>每一個倉儲都有&lt;code&gt;，在完成建立組倉儲後有code就可以改版。<br/>任何一個倉儲中都有配置code，codespaces是一個線上整合環境與replit相似，只是介面是另一個配置。在倉儲下可以建一個在主分之來建codespaces。<br/>先啟動動態在功能表還原終端系統，並新增一個終端系統，有兩意思給指令分別啟動動態與靜態。在開始run後要執行python3 main.py，遇到執行時沒有flask模組。就要去chmod u+x init-replit讓程式可以執行，讓他幫其安裝對應模組。最後在./init-replit。網站就會給一個阜可以開啟動態。<br/>要在python3 mhttp.senver 啟動一個模組，因系統帶有一個動態一個靜態，靜態還有一個index，更且有一個index可以啟動，帶進編輯器。index阻礙小輸送快速，約0秒就跳進content跟index，只要用這指令啟用靜態就可以看到更改了，改版會力馬有反應。每一次阜號都是不一樣安全性高。<br/>code每月給定數量相同，編輯可以在介面外，在上傳時開啟就好，使用完後要記得關閉，每月用量平均好就可以一直免費使用。</strong></p>
<h2>2</h2>
<p><span style="background-color: #ffff00;"><strong>練習2:</strong></span><strong>請各分組製作一個 Web-based 網誌與簡報, 說明如何在 </strong><strong><a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 環境中, 利用 IPv6 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">ZeroMQ Remote API</a> Python 進行兩個自由度的鋼球平衡檯自動控制系統模擬?</strong></p>
<p><span style="background-color: #ff0000;"><strong>答:</strong></span></p>
<p>ZeroMQ遠端API<br/>共分了7種不同的程式語言。</p>
<p>1.Python客戶端<br/>2.C++客戶端<br/>3.Java客戶端<br/>4.Matlab用戶端<br/>5.Octave用戶端<br/>6.Lua客戶端<br/>7.Rust用戶端</p>
<p>每個語言都需要套件<br/>1.Python客戶端:$ python3 -m pip install coppeliasim-zmqremoteapi-client<br/>2.C++客戶端:jsoncons和cppzmq套件<br/>3.Java客戶端:Apache Maven 建構ex. $ export COPPELIASIM_ROOT_DIR=path/to/CoppeliaSim/exec/folder/or/resources/folder/on/macOS<br/>$ cd zmqRemoteApi/clients/java<br/>$ mvn package -D"GENERATE_INCLUDE_OBJECTS=sim,simIK"</p>
<p>#注意需確保您的資料夾名稱不包含任何空格，並且 CoppeliaSim 正在運行（API 函數從 CoppeliaSim 取得)前面只考慮了 sim 和 simIK 命名空間，您可以根據需要添加更多命名空間#<br/>4.Matlab用戶端:需要捆綁的JeroMQ，如果尚不存在，它會自動安裝<br/>5.Octave用戶端:需要 Octave 6.4+、octave 通訊和 Zeromq 軟體包<br/>6.Lua客戶端:目前，僅在 CoppeliaSim 腳本內支援 Lua 用戶端，也就是支援API用戶端程式碼<br/>7.Rust用戶端: Samuel Cavalcanti 提供</p>
<p>上面為各程式語言對於ZeroMQ遠端API應用程式與 CoppeliaSim 連接的多種方式及要連接所需要的插件程式庫，後續能續分下去，上述指示統整。</p>
<h2>3</h2>
<p><strong>建立 foot_basket_ball 模擬場景</strong></p>
<p><span style="color: #ff0000;"></span></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://en.wikipedia.org/wiki/Python_（程式語言）</span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">例子：</span></span></h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.geeksforgeeks.org/python-programming-examples/</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.programiz.com/python-programming/examples</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python教學：</span></span></h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://docs.python.org/3/tutorial/</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 的非正式介紹</span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">縮排（Python 採用 4 個 Spaces 縮排，以介面執行範圍）</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">變數（</span></span><a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 關鍵字</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">）</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">註（#單行註解、三單標註或三雙標註標註多行註解）</span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">數</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(整數 int(), 浮點數 float())</span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">字串</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">（字符串）</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">print (Python 內建函數, </span></span><a href="https://docs.python.org/3/library/functions.html#print"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">print()</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">函式)</span></span></h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python是控制流程工具</span></span></a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">為了</span></span></a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如果</span></span></a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">範圍</span></span></a></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">打開</span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">讀</span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清單</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">元組</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">字典</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">功能</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">嘗試...除了</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">休息</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">經過</span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">類別</span></span></a></h4>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">此頁面示範如何在同一頁面下納入多個線上Ace編輯器與執行按鈕（</span></span><a href="/downloads/practice_html.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">practice_html.txt</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">動態頁面超檔案）。</span></span></p>
<p><a href="/downloads/practice_html.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Practice_html.txt</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">動態頁面超檔案應該可以在啟動 Brython 時，設定會將 .py 檔案放入 downloads/py 目錄中引用。</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">也即將所有對應的 html 也使用 Brython 產生，然後編寫為</span></span><a href="https://docs.python.org/3/tutorial/classes.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">類別</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">後，在範例匯入時透過</span></span><a href="https://docs.python.org/3/tutorial/classes.html#instance-objects"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">實例</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">引用。</span></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">&lt;!-- 啟動 Brython --&gt;</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
&lt;腳本&gt;</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
視窗.onload=函數(){</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
}</span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
&lt;/腳本&gt;</span></span></pre>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100：</span></span></p>
<p><button id="add1to100"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1 加到 100</span></span></button></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">將 iterable 與 iterator</span></span><a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">相關說明</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，利用 Brython 與 Ace Editor 整理在此頁面。</span></span></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename" placeholder="input file name" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100第2部分：</span></span></p>
<p><button id="add1to100part2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1 加到 100</span></span></button><button id="cango_three_gears"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cango_三_齒輪</span></span></button><button id="bsnake"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">BS蛇</span></span></button><button id="aitetris"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">人工智慧俄羅斯方塊</span></span></button><button id="threejsblock"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">旋轉塊</span></span></button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename2" placeholder="input file name" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>