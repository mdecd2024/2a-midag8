<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2a-midag8 - W3</title><link href="./" rel="alternate"></link><link href="./feeds/w3.atom.xml" rel="self"></link><id>./</id><updated>2024-05-09T21:35:25+08:00</updated><entry><title>2024 Spring 課程 W3</title><link href="./2024-Spring-W3-blog-tutorial.html" rel="alternate"></link><published>2024-04-26T14:11:00+08:00</published><updated>2024-05-09T21:35:25+08:00</updated><author><name>41023108 41023110 41023155 41023211</name></author><id>tag:None,2024-04-26:./2024-Spring-W3-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;

&lt;h1&gt;將英文文章翻譯成中文並整理&lt;/h1&gt;
&lt;p&gt;負責翻譯23~44頁 因為本組只有4位 因此更加努力的負責自己part
https://github.com/41023155/cd2024/blob/main/downloads/section%7B%E5%A4%A7%E6%A8%99%7D.txt
因為不熟悉自行丟入到自己的個人倉儲 因此花費時間比較久 稍微延到了進度 還請老師體諒
慢慢了解此文章是在說什麼內容 達到老師希望我們做到的事&lt;/p&gt;
&lt;h1&gt;w3 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料。&lt;/h1&gt;
&lt;p&gt;負責第三段 43-65page 由41023110 (introduction_orig.txt, 使用了chatgpt與劍橋辭翻譯，並用word編排翻譯段落。&lt;/p&gt;
&lt;h1&gt;w3-1 如何將個人倉儲設為 2a-midag2 分組倉儲的子模組&lt;/h1&gt;
&lt;p&gt;在replit來維護的話，有一些特定的方法，Repri是綁到你給他的賬號下。假如現在在近端做，就必須把它克隆下來然後再進行操作然後再推回去。利用SSH ，先確認在靜端是否有權限，權限是在登錄cadlab檔上的putty.reg，此部分是利用putty做的，在近端部分沒有時間限制，在目前系統上putty是沒有任何setings。但現在要用ssh刻隆下它，就必須要權限。在找到實體權限後雙擊就可寫入進去，在察看putty有出現對應的key與setings，都有就可用setings進行刻隆，並且改版可以push回去。載入之後有setings名稱，並確認是否有設proxy，因為沒有設ipv所以沒有proxy，所以之前設定部分要修改成none，並確認key是否有更改。key要設到外部才可攜。 確認可以連線後，就可以把key as push出來，key就會在主態登錄檔regedit中，在current_root下的software可找到設定的setings，並且裡面就有對應的key。 有權限後就可刻隆。刻隆在c槽比較快速，切換槽c並在槽中用mkdir建一個tmp，並用git clone --子模組recurse+ssh+對應帳號 刻隆下。 執行成功就可以讓倉儲設為子模組，先進入倉儲對應目錄把整個資料抓下，並git add。(分組倉儲底下)組倉儲名稱+git+子模組submodule+add(表示用git建立子模組)+個人課程倉儲+目錄，用https去抓子模組在分組倉儲是沒有權限的。 可以把組員的倉儲抓下來。在個人更新時可以分段抓取，未處理完的章節可以不引進。在git push後不只建了目錄還會動gitmodules檔案，待第二個人還沒建子模組前就刻隆下來，將個人倉儲加為子模組之後，就要處理.gitmodules的衝突。&lt;/p&gt;
&lt;h1&gt;w3-2 將組員的個人倉儲設為分組倉儲子模組&lt;/h1&gt;
&lt;p&gt;已建立組別倉儲，利用倉儲對應的codespaces下git submodule add。確認git status分支是否跟主分支是同步的，在用ls-l秀出內容後clear下來。接著用git submodule add+倉儲網址+git+學號，指令意思是必須在分組倉儲目錄新增一個子模組，其中子模組要的資料在複製的網址中取得，並打上目錄名稱。成功 克隆後add在commit推上去，推上後回到倉儲確認有子模組資料加入。其中子模組是有版本的，意思是可以開發跟推出同步進行，版本可自行決定公布。&lt;/p&gt;
&lt;h1&gt;w3-3 如何在 Replit 維護分組倉儲&lt;/h1&gt;
&lt;p&gt;處理與Git和SSH相關的操作。獲取和安裝特定的子模塊，並準備環境以啟用編輯功能的步驟。在配置文件中權限很重要。接著創建和管理SSH密鑰以及將公鑰添加到特定的帳戶中。再來如何在Git中進行提交，並解決了由於權限問題和衝突。在操作過程中保持耐心和細心與定期備份數據的重要性。最後如何使用命令來移動和重命名文件，並通過上傳和移動文件來維護Git存儲庫。&lt;/p&gt;
&lt;h1&gt;w3-使用 Gitpod 維護個人網站&lt;/h1&gt;
&lt;p&gt;使用Gitpod連結GitHub帳號，透過倉儲網址進入Gitpod後，若無對應的模組，需先執行chmod u+x init_replit進行模組安裝。儘管提供的資源與codespaces不同，但執行速度依然快速。在Gitpod中開啟python3，並具有多個終端機，程式將自動開啟瀏覽器進入編輯模式。即使未下載子模組，Gitpod仍會列出目錄，相較於codespaces功能稍好，且網址為亂碼式以保障安全性。 若需查看靜態內容，可新增一個終端機，執行python3並啟動http server，直接在8000埠號瀏覽器中開啟即可查看靜態內容。要關閉執行，可在Gitpod.io儀錶板中進行操作，點擊"stop"即可停止計算時間。&lt;/p&gt;
&lt;h1&gt;w3-使用 Gitpod 維護分組網站&lt;/h1&gt;
&lt;p&gt;進入Gitpod連結登陸github帳號。利用倉儲網址打開，裡面沒有對應的模組，所以要先chmod u+x init_replit安裝模組。其中給予的資源並不輸codespaces，執行速度依樣快速。照樣打開python3，並且也有多的終端機，程式一樣會自動開啟瀏覽器，就可以直接進入編輯。若假如沒有下載子模組，Gitpod一樣會幫忙列出目錄，比codespaces稍好些。並且網址也是亂碼式保全功能。 要看靜態，新增一個終端機，然後用python3執行模組。啟動http server，直接啟動8000埠號瀏覽器幫你開啟，open就可看到靜態。 要關閉執行，一樣在Gitpod.io儀錶板，可看到登陸與改變內容，需要關閉點stop就會停止計算時間。&lt;/p&gt;
&lt;h1&gt;w3-使用 Gitpod 維護分組網站&lt;/h1&gt;
&lt;p&gt;在協同分組報告製作中，使用LaTeX進行最終的文件製作是一種常見的做法。為了在Windows系統中進行編譯，必須下載並安裝LaTeX程序。報告的主要內容通常放在團隊的Git倉庫中的downloads資料夾下。每個組員被分配了特定的任務，例如撰寫摘要、引言等。任務分配完成後，組員需要將自己的工作上傳到團隊的Git倉庫中，以便其他成員可以查看和整合。在上傳之前，需要確保更新了最新的版本，並執行必要的編譯步驟。整個過程需要團隊成員之間的密切合作和有效的溝通，以確保最終的報告質量和準確性。&lt;/p&gt;
&lt;h1&gt;設定網誌&lt;/h1&gt;
&lt;p&gt;在設定網誌時，首先需要了解網誌的原始文稿通常存放在Markdown目錄下，轉換為HTML檔案後存放在Blog目錄下。使用Pelican套件進行轉換，並根據不同需求設定不同的配置檔案，如local_publishconf.py和publishconf.py。這些配置檔案包含了網址、作者、網誌標題等信息，並根據需求設置絕對或相對路徑。另外，網誌內容需要按照一定的格式編寫，包括日期、標題、摘要、內容等。完成編寫後，使用gen_blog工具進行轉換，確認無誤後提交到GitHub上。&lt;/p&gt;
&lt;h1&gt;w3&lt;/h1&gt;
&lt;p&gt;如何協同製作分組報告，並將各組組員加入至分組倉儲建立子模組，LaTeX 轉 pdf教學.&lt;/p&gt;
&lt;h2&gt;期中協同分組報告(將組員的個人倉儲設為分組倉儲子模組)&lt;/h2&gt;
&lt;p&gt;我是使用可攜環境直接抓取組員倉儲並建立子目錄，前期在git clone時有在putty建立了一個key，有了權限就能克隆及push，如下html&lt;/p&gt;
&lt;pre class="brush: python"&gt;
1.創建putty中的key
2.開啟可攜系統cmd
3.開啟後輸入cd tmp 導入tmp目錄中
4.進去tmp後 輸入git clone --recurse-submodules 倉儲網址.git(克隆遠端數據庫)
5.確認tmp目錄下有自己倉儲目錄後 輸入cd 倉儲名稱
6.進入倉儲目錄後，cms即可開啟動態網站
&lt;/pre&gt;

&lt;p&gt;克隆完分組倉儲後，在依照下面html方式抓取:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
1.git clone https://github.com/mdecd2024/2a-midag8.git
cd 2a-midag8  #克隆完分組倉儲後進入2a-midag x中 。
2.git submodule add 組員課程倉儲網址.git  +組員學號(此為子目錄名稱)  #有組員學號目的是為了後續抓取組員課程倉儲資料較為方便
3.git add .
4.git commit -m ""
5.git push
&lt;/pre&gt;

&lt;p&gt;若要更新組員課程倉儲資料作法如下:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
1.cd 2a-midag8 #進入分組倉儲2a-midag x中 。
2.cd 41023108 #輸入 cd 組員子目錄名稱 。
3.git pull origin main #進入組員子目錄中 從遠端拉取最新的子模組代碼。
4.cd .. #退出組員子目錄
5.git add .
6.git commit -m ""
7.git push   #這是確保在更新子模組之後，將變更提交推送回主存儲庫。
&lt;/pre&gt;

&lt;h2&gt;使用 Gitpod 維護倉儲與網站&lt;/h2&gt;
&lt;p&gt;感覺Gitpod 使用方式和codespaces、replit很像，跟replit差別是，跑的快多了，Gitpod 加上前面幾個維護方式也已經有4個了，都大同小異&lt;/p&gt;
&lt;h2&gt;有關 LaTeX 轉 pdf&lt;/h2&gt;
&lt;p&gt;需先將miktex-portable.7z下載並解壓至可攜環境data中，將已經編譯好的.txt檔案上傳至遠端，最終要以latex轉為pdf為下列html中所編譯出的腳本:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
\documentclass[12pt,a4paper]{report}  %紙張設定
\usepackage{xeCJK}%中文字體模組
\setCJKmainfont{標楷體} %設定中文字體
%\setCJKmainfont{MoeStandardKai.ttf}
\newfontfamily\sectionef{Times New Roman}%設定英文字體
%\newfontfamily\sectionef{Nimbus Roman}
\usepackage{enumerate}
\usepackage{amsmath,amssymb}%數學公式、符號
\usepackage{amsfonts} %數學簍空的英文字
\usepackage{graphicx, subfigure}%圖形
\usepackage{fontawesome5} %引用icon
\usepackage{type1cm} %調整字體絕對大小
\usepackage{textpos} %設定文字絕對位置
\usepackage[top=2.5truecm,bottom=2.5truecm,
left=3truecm,right=2.5truecm]{geometry}
\usepackage{titlesec} %目錄標題設定模組
\usepackage{titletoc} %目錄內容設定模組
\usepackage{textcomp} %表格設定模組
\usepackage{multirow} %合併行
%\usepackage{multicol} %合併欄
\usepackage{CJK} %中文模組
\usepackage{CJKnumb} %中文數字模組
\usepackage{wallpaper} %浮水印
\usepackage{listings} %引用程式碼
\usepackage{hyperref} %引用url連結
\usepackage{setspace}
\usepackage{lscape}%設定橫式
\lstset{language=Python, %設定語言
        basicstyle=\fontsize{10pt}{2pt}\selectfont, %設定程式內文字體大小
        frame=lines,    %設定程式框架為線
}
%\usepackage{subcaption}%副圖標
\graphicspath{{./../images/}} %圖片預設讀取路徑
\usepackage{indentfirst} %設定開頭縮排模組
\renewcommand{\figurename}{\Large 圖.} %更改圖片標題名稱
\renewcommand{\tablename}{\Large 表.}
\renewcommand{\lstlistingname}{\Large 程式.} %設定程式標示名稱
\hoffset=-5mm %調整左右邊界
\voffset=-8mm %調整上下邊界
\setlength{\parindent}{3em}%設定首行行距縮排
\usepackage{appendix} %附錄
\usepackage{diagbox}%引用表格
\usepackage{multirow}%表格置中
%\usepackage{number line}
%=------------------更改標題內容----------------------=%
\titleformat{\chapter}[hang]{\center\sectionef\fontsize{20pt}{1pt}\bfseries}{\LARGE 第\CJKnumber{\thechapter}章}{1em}{}[]
\titleformat{\section}[hang]{\sectionef\fontsize{18pt}{2.5pt}\bfseries}{{\thesection}}{0.5em}{}[]
\titleformat{\subsection}[hang]{\sectionef\fontsize{18pt}{2.5pt}\bfseries}{{\thesubsection}}{1em}{}[]
%=------------------更改目錄內容-----------------------=%
\titlecontents{chapter}[11mm]{}{\sectionef\fontsize{18pt}{2.5pt}\bfseries\makebox[3.5em][l]
{第\CJKnumber{\thecontentslabel}章}}{}{\titlerule*[0.7pc]{.}\contentspage}
\titlecontents{section}[18mm]{}{\sectionef\LARGE\makebox[1.5em][l]
{\thecontentslabel}}{}{\titlerule*[0.7pc]{.}\contentspage}
\titlecontents{subsection}[4em]{}{\sectionef\Large\makebox[2.5em][l]{{\thecontentslabel}}}{}{\titlerule*[0.7pc]{.}\contentspage}
%=----------------------章節間距----------------------=%
\titlespacing*{\chapter} {0pt}{0pt}{18pt}
\titlespacing*{\section} {0pt}{12pt}{6pt}
\titlespacing*{\subsection} {0pt}{6pt}{6pt}
%=----------------------標題-------------------------=%             
\begin{document} %文件
\sectionef %設定英文字體啟用
\vspace{12em}
\begin{titlepage}%開頭
\begin{center}   %標題  
\makebox[1.5\width][s] %[s] 代表 Stretch the interword space in text across the entire width
{\fontsize{24pt}{2.5pt}國立虎尾科技大學}\\[18pt]
\makebox[1.5\width][s]
{\fontsize{24pt}{2.5pt}機械設計工程系}\\[18pt]
\sectionef\fontsize{24pt}{1em}\selectfont\textbf
{
\vspace{0.5em}
ODOO PLM 在協同產品設計上的應用}\\[18pt]
%設定文字盒子 [方框寬度的1.5倍寬][對其方式為文字平均分分布於方框中]\\距離下方18pt
\vspace{1em} %下移
\fontsize{24pt}{1pt}\selectfont\textbf{- 以鋼球平衡台系統設計為例}\\
\vspace{1em}
\sectionef\fontsize{24pt}{1em}\selectfont\textbf
{
\vspace{0.5em}
Steel Ball Balancing Platform System Design}
 \vspace{1em}
%=---------------------參與人員-----------------------=%             
\end{center}
\begin{flushleft}
\begin{LARGE}

\hspace{32mm}\makebox[5cm][s]
{指導教授：\quad 嚴\quad 家\quad 銘\quad 老\quad 師}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{班\qquad 級：\quad 四\quad 設\quad 二\quad 甲}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{學\qquad 生：\quad 第\quad 一\quad 位\quad(411231xx)}
\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 二\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad  三\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 四\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 五\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 六\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 七\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 八\quad 位\quad(411231xx)}\\[6pt]
%設定文字盒子[寬度為5cm][對其方式為文字平均分分布於方框中]空白距離{36.5mm}\空白1em
\end{LARGE}
\end{flushleft}
\vspace{4em}
\fontsize{18pt}{2pt}\selectfont\centerline{\makebox[\width][s]
{中華民國\hspace{3em} 
113 \quad 年\quad 3\quad 月}}
\end{titlepage}
\newpage


%=------------------------摘要-----------------------=%
\input{abstract.tex}
\newpage
%=------------------------目錄----------------------=%
\renewcommand{\contentsname}{\centerline{\fontsize{18pt}{\baselineskip}\selectfont\textbf{目\quad 錄}}}
\tableofcontents　　%目錄產生
\newpage
%=------------------圖表目錄產生----------------------=%
\renewcommand{\listfigurename}{\centerline{\fontsize{18pt}{\baselineskip}\selectfont\textbf{圖\quad 目\quad 錄 }}}
\newcommand{\loflabel}{圖} %定義\loflabel 文字為圖
\renewcommand{\numberline}[1]{\loflabel~#1\hspace*{0.5em}}
\listoffigures
%\newcommand{\captioname}{圖}
%\newpage
%\renewcommand{\listtablename}{\centerline{\fontsize{18pt}{\baselineskip}\selectfont\textbf{表\quad 目\quad 錄 }}}
%\newcommand{\lotlabel}{表} %定義\lotlabel 文字為表
%\renewcommand{\numberline}[1]{\lotlabel~#1\hspace*{0.5em}}
%\listoftables

\end{center}
%=-------------------------內容----------------------=%
\input{1_introduction.tex}
\input{2_player_making_process.tex}
\input{3_Lua_source_code.tex}
\input{4_timer_scooreboard.tex}
\input{5_Coppeliasim_simulate_scene.tex}
\input{6_game_conection.tex}
\input{7_suggestion.tex}
%=---------------------相關資料----------------------=%
%\input{9_reference.tex}
%=---------------附錄-----------------=%
%\addcontentsline{toc}{chapter}{附錄} %新增目錄名稱
%\input{10_appendix.tex}
\newpage
\end{document}
&lt;/pre&gt;
&lt;p&gt;只需將自己資料依照上面模式排版即可得出一個.txt檔案，後續以xelatex 檔名.txt，它就會幫你在分組downloads目錄下上傳一個轉完的.pdf&lt;/p&gt;
&lt;h1&gt;w3利用 Github Classroom 指定分組倉儲&lt;/h1&gt;
&lt;p&gt;1.由組長建立2a-midagx名稱的倉儲分組網站，並找定組員join至剛建立的網站，使用codespaces維護倉儲網站，可直接安裝模組啟動動態網站，做法上和replit很像，一樣使用python3 main.py進入分組動態網站，使用python3 -m http.sever開啟靜態網站，說明codespaces使用上的限制。 2.使用replit管理github分組倉儲&lt;/p&gt;
&lt;h1&gt;利用 Codespaces 維護倉儲與網站&lt;/h1&gt;
&lt;p&gt;利用code中的Codespaces維護，開啟後用終端機開啟動態靜態網站，也可以在裡面更新網誌，記得在開啟python3前需要先安裝模組，就跟replit一樣需先確認是否有安裝過模組。&lt;/p&gt;</content><category term="W3"></category><category term="網誌編寫"></category></entry></feed>