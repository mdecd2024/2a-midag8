<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-04-12T15:48:53+08:00</updated><entry><title>W7-8</title><link href="./2024-Spring-w7-8-blog-tutorial.html" rel="alternate"></link><published>2024-04-12T13:29:00+08:00</published><updated>2024-04-12T15:48:53+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-12:./2024-Spring-w7-8-blog-tutorial.html</id><summary type="html">&lt;p&gt;第七-八週實作內容報告&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第七-八週實作內容報告&lt;/p&gt;


&lt;h1&gt;w7-8&lt;/h1&gt;
&lt;p&gt;分組影片報告
各組員上傳一支影片講解個人與團隊分配任務製作結果。&lt;/p&gt;
&lt;h2&gt;41023108&lt;/h2&gt;
&lt;h2&gt;41023110&lt;/h2&gt;
&lt;h2&gt;41023155&lt;/h2&gt;
&lt;h2&gt;41023211&lt;/h2&gt;</content><category term="w7-8"></category><category term="網誌編寫"></category></entry><entry><title>W6</title><link href="./2024-Spring-w6-blog-tutorial.html" rel="alternate"></link><published>2024-03-28T16:18:00+08:00</published><updated>2024-03-29T16:18:05+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-28:./2024-Spring-w6-blog-tutorial.html</id><summary type="html">&lt;p&gt;第六週實作內容報告&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第六週實作內容報告&lt;/p&gt;


&lt;h1&gt;w6&lt;/h1&gt;
&lt;p&gt;w4任務
第八組自評分數:80分&lt;/p&gt;
&lt;p&gt;下面為2a影片嵌入各組員分組網站網頁連結，影片、摘要、字幕文字檔皆在連結內。&lt;/p&gt;
&lt;h2&gt;41023108&lt;/h2&gt;
&lt;p&gt;組員自評: 75分&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecd2024.github.io/2a-midag8/content/w4%202a%20hw2(w4.html"&gt;2a-midag8 w4 2a hw4&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;41023110&lt;/h2&gt;
&lt;p&gt;組員自評: 70分&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecd2024.github.io/2a-midag8/content/w4%202a%20hw2(w3.html"&gt;2a-midag8 w4 2a hw3&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;41023155&lt;/h2&gt;
&lt;p&gt;組員自評: 70分&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecd2024.github.io/2a-midag8/content/w4%202a%20hw2(w2.html"&gt;2a-midag8 w4 2a hw2&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;41023211&lt;/h2&gt;
&lt;p&gt;組員自評: 70分&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecd2024.github.io/2a-midag8/content/w4%202a%20hw2(w1.html"&gt;2a-midag8 w4 2a hw1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;將w4-w5週影片剪輯實作網址個別建立在此頁每個組員學號下方，並讓其自評自己的分數
也能知道剪輯的各週影片都有什麼?&lt;/p&gt;</content><category term="w6"></category><category term="網誌編寫"></category></entry><entry><title>W5</title><link href="./2024-Spring-w5-blog-tutorial.html" rel="alternate"></link><published>2024-03-22T16:18:00+08:00</published><updated>2024-03-23T13:23:53+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-22:./2024-Spring-w5-blog-tutorial.html</id><summary type="html">&lt;p&gt;第五週實作內容報告&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第五週實作內容報告&lt;/p&gt;


&lt;h1&gt;w5&lt;/h1&gt;
&lt;h2&gt;統整網誌&lt;/h2&gt;
&lt;p&gt;將組員個人網誌納入分組倉儲目錄下，並持續更新各影片剪輯後製，在嶔入影片過程中多次校正文檔，我們使用的軟體是https://www.capcut.com/my-edit這個軟體，目前字幕只支援簡體中文所以我們必須在翻完後再重新拉回進度條去逐字更改翻錯的內容及將簡體字改成繁體字，20分鐘以上的影片通常都會要剪上1hr以上時間。&lt;/p&gt;</content><category term="w5"></category><category term="網誌編寫"></category></entry><entry><title>W4</title><link href="./2024-Spring-w4-blog-tutorial.html" rel="alternate"></link><published>2024-03-15T16:18:00+08:00</published><updated>2024-03-21T18:48:42+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-15:./2024-Spring-w4-blog-tutorial.html</id><summary type="html">&lt;p&gt;第四週實作內容報告&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第四週實作內容報告&lt;/p&gt;


&lt;h1&gt;w4&lt;/h1&gt;
&lt;h2&gt;影片上字幕&lt;/h2&gt;
&lt;p&gt;將各週影片上字幕並置入分組網頁上。
統整各週內容合併成網誌，目前進度中的專案還有LaTeX轉pdf及各週還有一些影片沒完整上傳
，對於使用LaTeX還是很有問題，想直接在倉儲裡新建一個新目錄存放圖片檔或後續的零件繪製的檔案，這樣downloaads目錄才不會那麼亂，就只是檔案路徑要改在我自己建立的目錄下。&lt;/p&gt;</content><category term="w4"></category><category term="網誌編寫"></category></entry><entry><title>W3</title><link href="./2024-Spring-w3-blog-tutorial.html" rel="alternate"></link><published>2024-03-11T18:49:00+08:00</published><updated>2024-03-21T21:17:35+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-11:./2024-Spring-w3-blog-tutorial.html</id><summary type="html">&lt;p&gt;第三週實作內容報告&lt;/p&gt;
&lt;h1&gt;w3&lt;/h1&gt;
&lt;p&gt;如何協同製作分組報告，並將各組組員加入至分組倉儲建立子模組，LaTeX 轉 pdf教學.&lt;/p&gt;
&lt;h2&gt;期中協同分組報告(將 …&lt;/h2&gt;</summary><content type="html">&lt;p&gt;第三週實作內容報告&lt;/p&gt;
&lt;h1&gt;w3&lt;/h1&gt;
&lt;p&gt;如何協同製作分組報告，並將各組組員加入至分組倉儲建立子模組，LaTeX 轉 pdf教學.&lt;/p&gt;
&lt;h2&gt;期中協同分組報告(將組員的個人倉儲設為分組倉儲子模組)&lt;/h2&gt;
&lt;p&gt;我是使用可攜環境直接抓取組員倉儲並建立子目錄，前期在git clone時有在putty建立了一個key，有了權限就能克隆及push，如下html&lt;/p&gt;
&lt;pre class="brush: python"&gt;
1.創建putty中的key
2.開啟可攜系統cmd
3.開啟後輸入cd tmp 導入tmp目錄中
4.進去tmp後 輸入git clone --recurse-submodules 倉儲網址.git(克隆遠端數據庫)
5.確認tmp目錄下有自己倉儲目錄後 輸入cd 倉儲名稱
6.進入倉儲目錄後，cms即可開啟動態網站
&lt;/pre&gt;

&lt;p&gt;克隆完分組倉儲後，在依照下面html方式抓取:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
1.git clone https://github.com/mdecd2024/2a-midag8.git
cd 2a-midag8  #克隆完分組倉儲後進入2a-midag x中 。
2.git submodule add 組員課程倉儲網址.git  +組員學號(此為子目錄名稱)  #有組員學號目的是為了後續抓取組員課程倉儲資料較為方便
3.git add .
4.git commit -m ""
5.git push
&lt;/pre&gt;

&lt;p&gt;若要更新組員課程倉儲資料作法如下:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
1.cd 2a-midag8 #進入分組倉儲2a-midag x中 。
2.cd 41023108 #輸入 cd 組員子目錄名稱 。
3.git pull origin main #進入組員子目錄中 從遠端拉取最新的子模組代碼。
4.cd .. #退出組員子目錄
5.git add .
6.git commit -m ""
7.git push   #這是確保在更新子模組之後，將變更提交推送回主存儲庫。
&lt;/pre&gt;

&lt;h2&gt;使用 Gitpod 維護倉儲與網站&lt;/h2&gt;
&lt;p&gt;感覺Gitpod 使用方式和codespaces、replit很像，跟replit差別是，跑的快多了，Gitpod 加上前面幾個維護方式也已經有4個了，都大同小異&lt;/p&gt;
&lt;h2&gt;有關 LaTeX 轉 pdf&lt;/h2&gt;
&lt;p&gt;需先將miktex-portable.7z下載並解壓至可攜環境data中，將已經編譯好的.txt檔案上傳至遠端，最終要以latex轉為pdf為下列html中所編譯出的腳本:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
\documentclass[12pt,a4paper]{report}  %紙張設定
\usepackage{xeCJK}%中文字體模組
\setCJKmainfont{標楷體} %設定中文字體
%\setCJKmainfont{MoeStandardKai.ttf}
\newfontfamily\sectionef{Times New Roman}%設定英文字體
%\newfontfamily\sectionef{Nimbus Roman}
\usepackage{enumerate}
\usepackage{amsmath,amssymb}%數學公式、符號
\usepackage{amsfonts} %數學簍空的英文字
\usepackage{graphicx, subfigure}%圖形
\usepackage{fontawesome5} %引用icon
\usepackage{type1cm} %調整字體絕對大小
\usepackage{textpos} %設定文字絕對位置
\usepackage[top=2.5truecm,bottom=2.5truecm,
left=3truecm,right=2.5truecm]{geometry}
\usepackage{titlesec} %目錄標題設定模組
\usepackage{titletoc} %目錄內容設定模組
\usepackage{textcomp} %表格設定模組
\usepackage{multirow} %合併行
%\usepackage{multicol} %合併欄
\usepackage{CJK} %中文模組
\usepackage{CJKnumb} %中文數字模組
\usepackage{wallpaper} %浮水印
\usepackage{listings} %引用程式碼
\usepackage{hyperref} %引用url連結
\usepackage{setspace}
\usepackage{lscape}%設定橫式
\lstset{language=Python, %設定語言
        basicstyle=\fontsize{10pt}{2pt}\selectfont, %設定程式內文字體大小
        frame=lines,    %設定程式框架為線
}
%\usepackage{subcaption}%副圖標
\graphicspath{{./../images/}} %圖片預設讀取路徑
\usepackage{indentfirst} %設定開頭縮排模組
\renewcommand{\figurename}{\Large 圖.} %更改圖片標題名稱
\renewcommand{\tablename}{\Large 表.}
\renewcommand{\lstlistingname}{\Large 程式.} %設定程式標示名稱
\hoffset=-5mm %調整左右邊界
\voffset=-8mm %調整上下邊界
\setlength{\parindent}{3em}%設定首行行距縮排
\usepackage{appendix} %附錄
\usepackage{diagbox}%引用表格
\usepackage{multirow}%表格置中
%\usepackage{number line}
%=------------------更改標題內容----------------------=%
\titleformat{\chapter}[hang]{\center\sectionef\fontsize{20pt}{1pt}\bfseries}{\LARGE 第\CJKnumber{\thechapter}章}{1em}{}[]
\titleformat{\section}[hang]{\sectionef\fontsize{18pt}{2.5pt}\bfseries}{{\thesection}}{0.5em}{}[]
\titleformat{\subsection}[hang]{\sectionef\fontsize{18pt}{2.5pt}\bfseries}{{\thesubsection}}{1em}{}[]
%=------------------更改目錄內容-----------------------=%
\titlecontents{chapter}[11mm]{}{\sectionef\fontsize{18pt}{2.5pt}\bfseries\makebox[3.5em][l]
{第\CJKnumber{\thecontentslabel}章}}{}{\titlerule*[0.7pc]{.}\contentspage}
\titlecontents{section}[18mm]{}{\sectionef\LARGE\makebox[1.5em][l]
{\thecontentslabel}}{}{\titlerule*[0.7pc]{.}\contentspage}
\titlecontents{subsection}[4em]{}{\sectionef\Large\makebox[2.5em][l]{{\thecontentslabel}}}{}{\titlerule*[0.7pc]{.}\contentspage}
%=----------------------章節間距----------------------=%
\titlespacing*{\chapter} {0pt}{0pt}{18pt}
\titlespacing*{\section} {0pt}{12pt}{6pt}
\titlespacing*{\subsection} {0pt}{6pt}{6pt}
%=----------------------標題-------------------------=%             
\begin{document} %文件
\sectionef %設定英文字體啟用
\vspace{12em}
\begin{titlepage}%開頭
\begin{center}   %標題  
\makebox[1.5\width][s] %[s] 代表 Stretch the interword space in text across the entire width
{\fontsize{24pt}{2.5pt}國立虎尾科技大學}\\[18pt]
\makebox[1.5\width][s]
{\fontsize{24pt}{2.5pt}機械設計工程系}\\[18pt]
\sectionef\fontsize{24pt}{1em}\selectfont\textbf
{
\vspace{0.5em}
ODOO PLM 在協同產品設計上的應用}\\[18pt]
%設定文字盒子 [方框寬度的1.5倍寬][對其方式為文字平均分分布於方框中]\\距離下方18pt
\vspace{1em} %下移
\fontsize{24pt}{1pt}\selectfont\textbf{- 以鋼球平衡台系統設計為例}\\
\vspace{1em}
\sectionef\fontsize{24pt}{1em}\selectfont\textbf
{
\vspace{0.5em}
Steel Ball Balancing Platform System Design}
 \vspace{1em}
%=---------------------參與人員-----------------------=%             
\end{center}
\begin{flushleft}
\begin{LARGE}

\hspace{32mm}\makebox[5cm][s]
{指導教授：\quad 嚴\quad 家\quad 銘\quad 老\quad 師}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{班\qquad 級：\quad 四\quad 設\quad 二\quad 甲}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{學\qquad 生：\quad 第\quad 一\quad 位\quad(411231xx)}
\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 二\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad  三\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 四\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 五\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 六\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 七\quad 位\quad(411231xx)}\\[6pt]
\hspace{32mm}\makebox[5cm][s]
{\hspace{43mm}第\quad 八\quad 位\quad(411231xx)}\\[6pt]
%設定文字盒子[寬度為5cm][對其方式為文字平均分分布於方框中]空白距離{36.5mm}\空白1em
\end{LARGE}
\end{flushleft}
\vspace{4em}
\fontsize{18pt}{2pt}\selectfont\centerline{\makebox[\width][s]
{中華民國\hspace{3em} 
113 \quad 年\quad 3\quad 月}}
\end{titlepage}
\newpage


%=------------------------摘要-----------------------=%
\input{abstract.tex}
\newpage
%=------------------------目錄----------------------=%
\renewcommand{\contentsname}{\centerline{\fontsize{18pt}{\baselineskip}\selectfont\textbf{目\quad 錄}}}
\tableofcontents　　%目錄產生
\newpage
%=------------------圖表目錄產生----------------------=%
\renewcommand{\listfigurename}{\centerline{\fontsize{18pt}{\baselineskip}\selectfont\textbf{圖\quad 目\quad 錄 }}}
\newcommand{\loflabel}{圖} %定義\loflabel 文字為圖
\renewcommand{\numberline}[1]{\loflabel~#1\hspace*{0.5em}}
\listoffigures
%\newcommand{\captioname}{圖}
%\newpage
%\renewcommand{\listtablename}{\centerline{\fontsize{18pt}{\baselineskip}\selectfont\textbf{表\quad 目\quad 錄 }}}
%\newcommand{\lotlabel}{表} %定義\lotlabel 文字為表
%\renewcommand{\numberline}[1]{\lotlabel~#1\hspace*{0.5em}}
%\listoftables

\end{center}
%=-------------------------內容----------------------=%
\input{1_introduction.tex}
\input{2_player_making_process.tex}
\input{3_Lua_source_code.tex}
\input{4_timer_scooreboard.tex}
\input{5_Coppeliasim_simulate_scene.tex}
\input{6_game_conection.tex}
\input{7_suggestion.tex}
%=---------------------相關資料----------------------=%
%\input{9_reference.tex}
%=---------------附錄-----------------=%
%\addcontentsline{toc}{chapter}{附錄} %新增目錄名稱
%\input{10_appendix.tex}
\newpage
\end{document}
&lt;/pre&gt;
&lt;p&gt;只需將自己資料依照上面模式排版即可得出一個.txt檔案，後續以xelatex 檔名.txt，它就會幫你在分組downloads目錄下上傳一個轉完的.pdf&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫"></category></entry><entry><title>W1</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-03-09T14:43:00+08:00</published><updated>2024-03-20T09:01:17+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-09:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;第一週實作內容報告&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第一週實作內容報告&lt;/p&gt;


&lt;h1&gt;w1&lt;/h1&gt;
&lt;p&gt;建立個人課程倉儲，下載當期可攜環境檔案後將個人倉儲 import 至 Replit，以及設定個人網誌.&lt;/p&gt;
&lt;h2&gt;2a 建個人課程倉儲&lt;/h2&gt;
&lt;p&gt;登入個人github帳號，使用老師給的 https://github.com/mdecycu/cmsimde_site
網址倉儲建立名稱為github名稱/cd2024倉儲。&lt;/p&gt;
&lt;h2&gt;將個人倉儲 import 至 Replit&lt;/h2&gt;
&lt;p&gt;登入replit，建議以github直接登入可以在後續認證時他會幫你做相關連接查驗。&lt;/p&gt;
&lt;h2&gt;設定 Github 帳號的雙重認證&lt;/h2&gt;
&lt;p&gt;進入個人倉儲settings中的ssh and gpg key 項目裡two-factor authentication選項啟動雙重認證，可以綁定手機或手錶，軟體名稱為authy app
有一點別重要，那就是當認證遺失只能以回復碼，才能找回帳號。&lt;/p&gt;
&lt;h2&gt;如何 import 倉儲至 Replit 進行改版&lt;/h2&gt;
&lt;p&gt;Replit中設定個人網誌的方法，使用markdown目錄原始檔做複製，可複製Pelican的程式碼，只需將其中的內容改成自己所要發表的內容即可，而Pelican轉換完的網誌內容則會出現在blog目錄下，如要將markdown中.md檔轉入blog中變成.html檔指令為pelican markdown -o blog -s local_publishconf.py，除了這個設定外還有其他別的的方式設定，這就得看使用者的帳號是甚麼在做其他設定。&lt;/p&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry><entry><title>W2</title><link href="./2024-Spring-w2-blog-tutorial.html" rel="alternate"></link><published>2024-03-01T18:43:00+08:00</published><updated>2024-03-21T19:21:23+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-03-01:./2024-Spring-w2-blog-tutorial.html</id><summary type="html">&lt;p&gt;第二週實作內容報告&lt;/p&gt;
&lt;h1&gt;w2&lt;/h1&gt;
&lt;p&gt;建立Github Classroom 指定分組倉儲，並使用replit、Codespaces及可攜環境維護分組倉儲，在git clone至近端執行動態網站.&lt;/p&gt;
&lt;h2&gt;利用 Github Classroom 指定分組倉儲&lt;/h2&gt;
&lt;p&gt;1.由組長建立2a-midagx名稱的倉儲分組網站，並找定組員 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;第二週實作內容報告&lt;/p&gt;
&lt;h1&gt;w2&lt;/h1&gt;
&lt;p&gt;建立Github Classroom 指定分組倉儲，並使用replit、Codespaces及可攜環境維護分組倉儲，在git clone至近端執行動態網站.&lt;/p&gt;
&lt;h2&gt;利用 Github Classroom 指定分組倉儲&lt;/h2&gt;
&lt;p&gt;1.由組長建立2a-midagx名稱的倉儲分組網站，並找定組員join至剛建立的網站，使用codespaces維護倉儲網站，可直接安裝模組啟動動態網站，做法上和replit很像，一樣使用python3 main.py進入分組動態網站，使用python3 -m http.sever開啟靜態網站，說明codespaces使用上的限制。
2.使用replit管理github分組倉儲&lt;/p&gt;
&lt;h2&gt;利用 Codespaces 維護倉儲與網站&lt;/h2&gt;
&lt;p&gt;利用code中的Codespaces維護，開啟後用終端機開啟動態靜態網站，也可以在裡面更新網誌，記得在開啟python3前需要先安裝模組，就跟replit一樣需先確認是否有安裝過模組。&lt;/p&gt;
&lt;h2&gt;在近端執行動態網站&lt;/h2&gt;
&lt;p&gt;可攜環境需先至mde.tw網站上下載 portable_2024.7z 這個壓縮檔案，解壓縮至個人隨身系統，步驟如下&lt;/p&gt;
&lt;pre class="brush: python"&gt;
1.創建putty中的key
2.開啟可攜系統cmd
3.開啟後輸入cd tmp 導入tmp目錄中
4.進去tmp後 輸入git clone --recurse-submodules 倉儲網址.git(克隆遠端數據庫)
5.確認tmp目錄下有自己倉儲目錄後 輸入cd 倉儲名稱
6.進入倉儲目錄後，cms即可開啟動態網站
&lt;/pre&gt;</content><category term="w2"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w0-blog-tutorial.html" rel="alternate"></link><published>2024-02-26T21:37:00+08:00</published><updated>2024-03-19T23:53:37+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-26:./2024-Spring-w0-blog-tutorial.html</id><summary type="html">&lt;p&gt;各週上課內容心得及實作項目&lt;/p&gt;
</summary><content type="html">&lt;p&gt;各週上課內容心得及實作項目&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
## 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w0"></category><category term="網誌編寫"></category></entry></feed>