{"pages":[{"title":"2024 Spring 課程 W2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 甲班第一組組長如何建立 midag1 Team 在這部影片我學到了如何用Codespaces維護2a-midag8分組倉儲 操作歸納如下 用 Codespaces 開啟動態網頁 執行以下命令使 init_replit 檔案具有執行權限： chmod u+x init_replit 執行 init_replit 檔案： ./init_replit 執行 main.py 檔案： python3 main.py 用 Codespaces 開啟靜態網頁 執行以下命令啟動 Python 內建的簡易伺服器： python3 -m http.server 如何進行改版 使用 git status 命令查看目前的修改狀態。 使用 git add . 命令將所有修改的檔案添加到暫存區。 使用 git commit -m \"新增的的內容\" 命令提交修改，並填入適合的提交訊息。 使用 git push 將本地的提交推送到遠端倉儲。 如何利用近端可攜系統維護分組網站 在這部影片我學到了如何用近端可攜系統維護分組網站 操作歸納如下 1.SSH 金鑰： 使用 Puttygen 建立一把 SSH 金鑰並將其存儲為 .ppk 格式的檔案。 2.SSH 金鑰導入 Putty： 使用 Putty 將 SSH 金鑰導入，以便在遠端伺服器上進行身份驗證。 3.PuTTY 會話設定： 在 Regedit 中找到 HKEY_CURRENT_USER\\Software\\SimonTatham\\PuTTY\\Sessions\\github.com 鍵，將其匯出為 .reg 檔案，這將保存你的 PuTTY 會話設定。 4.本地端進行改版： 切換到暫存目錄： cd tmp 克隆倉庫： git clone --recurse-submodules git@github.com:mdecd2024/2a-midag1.git 進入克隆的倉庫目錄： cd 2a-midag1 進行修改和提交： 進行修改... git add . git commit -m \"自己要推的東西\" 推送到遠端倉庫： git push 5.其他使用者推送： 獲取你的 IPv4 地址： ipconfig 在組別下的 Python 腳本中導入你的 IPv4 環境。 允許組別中的其他成員更新和推送修改。","tags":"w2","url":"./2024-Spring-w2-blog-tutorial.html"},{"title":"2024 Spring 課程 W3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 將英文文章翻譯成中文並整理 負責翻譯23~44頁 因為本組只有4位 因此更加努力的負責自己part https://github.com/41023155/cd2024/blob/main/downloads/section%7B%E5%A4%A7%E6%A8%99%7D.txt 因為不熟悉自行丟入到自己的個人倉儲 因此花費時間比較久 稍微延到了進度 還請老師體諒 慢慢了解此文章是在說什麼內容 達到老師希望我們做到的事","tags":"W3","url":"./2024-Spring-W3-blog-tutorial.html"},{"title":"2024 協同課程a-w3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w3 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料。 負責第三段 43-65page 由41023110 (introduction_orig.txt, 使用了chatgpt與劍橋辭翻譯，並用word編排翻譯段落。 w3-1 如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組 在replit來維護的話，有一些特定的方法，Repri是綁到你給他的賬號下。假如現在在近端做，就必須把它克隆下來然後再進行操作然後再推回去。利用SSH ，先確認在靜端是否有權限，權限是在登錄cadlab檔上的putty.reg，此部分是利用putty做的，在近端部分沒有時間限制，在目前系統上putty是沒有任何setings。但現在要用ssh刻隆下它，就必須要權限。在找到實體權限後雙擊就可寫入進去，在察看putty有出現對應的key與setings，都有就可用setings進行刻隆，並且改版可以push回去。載入之後有setings名稱，並確認是否有設proxy，因為沒有設ipv所以沒有proxy，所以之前設定部分要修改成none，並確認key是否有更改。key要設到外部才可攜。 確認可以連線後，就可以把key as push出來，key就會在主態登錄檔regedit中，在current_root下的software可找到設定的setings，並且裡面就有對應的key。 有權限後就可刻隆。刻隆在c槽比較快速，切換槽c並在槽中用mkdir建一個tmp，並用git clone --子模組recurse+ssh+對應帳號 刻隆下。 執行成功就可以讓倉儲設為子模組，先進入倉儲對應目錄把整個資料抓下，並git add。(分組倉儲底下)組倉儲名稱+git+子模組submodule+add(表示用git建立子模組)+個人課程倉儲+目錄，用https去抓子模組在分組倉儲是沒有權限的。 可以把組員的倉儲抓下來。在個人更新時可以分段抓取，未處理完的章節可以不引進。在git push後不只建了目錄還會動gitmodules檔案，待第二個人還沒建子模組前就刻隆下來，將個人倉儲加為子模組之後，就要處理.gitmodules的衝突。 w3-2 將組員的個人倉儲設為分組倉儲子模組 已建立組別倉儲，利用倉儲對應的codespaces下git submodule add。確認git status分支是否跟主分支是同步的，在用ls-l秀出內容後clear下來。接著用git submodule add+倉儲網址+git+學號，指令意思是必須在分組倉儲目錄新增一個子模組，其中子模組要的資料在複製的網址中取得，並打上目錄名稱。成功 克隆後add在commit推上去，推上後回到倉儲確認有子模組資料加入。其中子模組是有版本的，意思是可以開發跟推出同步進行，版本可自行決定公布。 w3-3 如何在 Replit 維護分組倉儲 處理與Git和SSH相關的操作。獲取和安裝特定的子模塊，並準備環境以啟用編輯功能的步驟。在配置文件中權限很重要。接著創建和管理SSH密鑰以及將公鑰添加到特定的帳戶中。再來如何在Git中進行提交，並解決了由於權限問題和衝突。在操作過程中保持耐心和細心與定期備份數據的重要性。最後如何使用命令來移動和重命名文件，並通過上傳和移動文件來維護Git存儲庫。 w3-使用 Gitpod 維護個人網站 使用Gitpod連結GitHub帳號，透過倉儲網址進入Gitpod後，若無對應的模組，需先執行chmod u+x init_replit進行模組安裝。儘管提供的資源與codespaces不同，但執行速度依然快速。在Gitpod中開啟python3，並具有多個終端機，程式將自動開啟瀏覽器進入編輯模式。即使未下載子模組，Gitpod仍會列出目錄，相較於codespaces功能稍好，且網址為亂碼式以保障安全性。 若需查看靜態內容，可新增一個終端機，執行python3並啟動http server，直接在8000埠號瀏覽器中開啟即可查看靜態內容。要關閉執行，可在Gitpod.io儀錶板中進行操作，點擊\"stop\"即可停止計算時間。 w3-使用 Gitpod 維護分組網站 進入Gitpod連結登陸github帳號。利用倉儲網址打開，裡面沒有對應的模組，所以要先chmod u+x init_replit安裝模組。其中給予的資源並不輸codespaces，執行速度依樣快速。照樣打開python3，並且也有多的終端機，程式一樣會自動開啟瀏覽器，就可以直接進入編輯。若假如沒有下載子模組，Gitpod一樣會幫忙列出目錄，比codespaces稍好些。並且網址也是亂碼式保全功能。 要看靜態，新增一個終端機，然後用python3執行模組。啟動http server，直接啟動8000埠號瀏覽器幫你開啟，open就可看到靜態。 要關閉執行，一樣在Gitpod.io儀錶板，可看到登陸與改變內容，需要關閉點stop就會停止計算時間。 有關 LaTeX 轉 pdf 在協同分組報告製作中，使用LaTeX進行最終的文件製作是一種常見的做法。為了在Windows系統中進行編譯，必須下載並安裝LaTeX程序。報告的主要內容通常放在團隊的Git倉庫中的downloads資料夾下。每個組員被分配了特定的任務，例如撰寫摘要、引言等。任務分配完成後，組員需要將自己的工作上傳到團隊的Git倉庫中，以便其他成員可以查看和整合。在上傳之前，需要確保更新了最新的版本，並執行必要的編譯步驟。整個過程需要團隊成員之間的密切合作和有效的溝通，以確保最終的報告質量和準確性。 設定網志 在設定網誌時，首先需要了解網誌的原始文稿通常存放在Markdown目錄下，轉換為HTML檔案後存放在Blog目錄下。使用Pelican套件進行轉換，並根據不同需求設定不同的配置檔案，如local_publishconf.py和publishconf.py。這些配置檔案包含了網址、作者、網誌標題等信息，並根據需求設置絕對或相對路徑。另外，網誌內容需要按照一定的格式編寫，包括日期、標題、摘要、內容等。完成編寫後，使用gen_blog工具進行轉換，確認無誤後提交到GitHub上。","tags":"a-w3-41023110","url":"./2024-協同課程a-w3-41023110.html"},{"title":"W7","text":"各週上課內容心得及實作項目 更分組網站內容 指派任務與組員，並要求其查找練習2說明如何在 CoppeliaSim 環境中, 利用 IPv6 ZeroMQ Remote API Python 進行兩個自由度的鋼球平衡檯自動控制系統模擬?相關內容。","tags":"w7-41023108","url":"./41023108-w7.html"},{"title":"2024 協同課程a-w2.","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w2-4如何用Github Codespaces維護網站內容。 每一個倉儲都有 ，在完成建立組倉儲後有code就可以改版。 任何一個倉儲中都有配置code，codespaces是一個線上整合環境與replit相似，只是介面是另一個配置。 在倉儲下可以建一個在主分之來建codespaces。 先啟動動態在功能表還原終端系統，並新增一個終端系統，有兩意思給指令分別啟動動態與靜態。 在開始run後要執行python3 main.py，遇到執行時沒有flask模組。 就要去chmod u+x init-replit讓程式可以執行，讓他幫其安裝對應模組。最後在./init-replit。 網站就會給一個阜可以開啟動態。要在python3 mhttp.senver 啟動一個模組，因系統帶有一個動態一個靜態。 靜態還有一個index，更且有一個index可以啟動，帶進編輯器。 index阻礙小輸送快速，約0秒就跳進content跟index，只要用這指令啟用靜態就可以看到更改了，改版會力馬有反應。 每一次阜號都是不一樣安全性高。 code每月給定數量相同，編輯可以在介面外，在上傳時開啟就好，使用完後要記得關閉，每月用量平均好就可以一直免費使用。 w2-5說明如何利用近端可攜系統維護分組網站 用ssh來動倉儲，需要有settings。 去到PuTTY Configuration中可看到盡端還沒有settings，表示見了之後會存到系統的登入閘。 所以可用regedit看到三個倉儲都可同步。 從PuTTY開始連線到github.com並把settings也存到github.com，要把剛才的ppy給它。 但目前ppk是在C槽中，開關機的話就會不見，所以要拉到外部隨身碟，就編可攜的。 在實體的路徑下去進入，就可以去clone下來，並切換到c槽git clone+submodules git+帳號+倉儲作業名稱執行。 有對應settings的key並且open過了，就有權限可以拉下來。","tags":"a-w2.-41023110","url":"./2024-協同課程a-w2.-41023110.html"},{"title":"W6","text":"第六週實作內容報告 w6 在分組網站加入w4任務 第八組自評分數:80分 下面為2a影片嵌入各組員分組網站網頁連結，影片、摘要、字幕文字檔皆在連結內。 41023108 組員自評: 75分 2a-midag8 w4 2a hw4 41023110 組員自評: 70分 2a-midag8 w4 2a hw3 41023155 組員自評: 70分 2a-midag8 w4 2a hw2 41023211 組員自評: 70分 2a-midag8 w4 2a hw1 將w4-w5週影片剪輯實作網址個別建立在此頁每個組員學號下方，並讓其自評自己的分數 也能知道剪輯的各週影片都有什麼?","tags":"w6-41023108","url":"./41023108-w6.html"},{"title":"W6","text":"第六週實作內容報告 w6 w4任務 第八組自評分數:80分 下面為2a影片嵌入各組員分組網站網頁連結，影片、摘要、字幕文字檔皆在連結內。 41023108 組員自評: 75分 2a-midag8 w4 2a hw4 41023110 組員自評: 70分 2a-midag8 w4 2a hw3 41023155 組員自評: 70分 2a-midag8 w4 2a hw2 41023211 組員自評: 70分 2a-midag8 w4 2a hw1 將w4-w5週影片剪輯實作網址個別建立在此頁每個組員學號下方，並讓其自評自己的分數 也能知道剪輯的各週影片都有什麼?","tags":"w6","url":"./2024-Spring-w6-blog-tutorial.html"},{"title":"W5","text":"第五週實作內容報告 w5 統整網誌 將組員個人網誌納入分組倉儲目錄下，並持續更新各影片剪輯後製，在嶔入影片過程中多次校正文檔，我們使用的軟體是https://www.capcut.com/my-edit這個軟體，目前字幕只支援簡體中文所以我們必須在翻完後再重新拉回進度條去逐字更改翻錯的內容及將簡體字改成繁體字，20分鐘以上的影片通常都會要剪上1hr以上時間。","tags":"w5-41023108","url":"./41023108-w5.html"},{"title":"2a-midag8 2024 Spring 課程","text":"第四週實作內容報告 w4 影片上字幕 將各週影片上字幕並置入分組網頁上。 統整各週內容合併成網誌，目前進度中的專案還有LaTeX轉pdf及各週還有一些影片沒完整上傳 ，對於使用LaTeX還是很有問題，想直接在倉儲裡新建一個新目錄存放圖片檔或後續的零件繪製的檔案，這樣downloaads目錄才不會那麼亂，就只是檔案路徑要改在我自己建立的目錄下。","tags":"w4","url":"./2024-Spring-w4-blog-tutorial.html"},{"title":"2024 協同課程a-w2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引。 w2-1 說明甲班第一組組長如何建立 midag1 Team, 並利用 Codespaces 維護 2a-midag1 分組倉儲 用github classroom建立組別倉儲，組長在or create a new team處以midag X 來稱謂組別名稱並+create team創立。在組別創立後，組員各自去join進入組別內。倉儲完全建立好後去到倉儲的settings並選取pages就可進入主分支。啟動完github pages就可以做code，並使用codespaces來維護內容。在codespaces中有許多終端機許多埠號資源可使用，不需要再公用443。啟動終端機要先安裝模組。使用者+執行+檔案位置=chmod u+x init_replit執行，執行安裝好後會直接給予2記憶體容量。但沒有run了，所以要在自己設定python3 main.py執行動態，利用8080幫我們開啟瀏覽器。連結埠號會呈現亂碼，所以別人無法進入。login進入動態後就可更改內容。終端機每個人每月都有120code小時。要push倉儲要新增終端機後，進行git add->git commit\"網頁標題\"，執行後就會直接推上不需要在轉檔。啟動靜態要在新增終端機，有python3內建模組了就可以直接http.server直接啟動埠號，8000會自動開啟瀏覽器連結，就可以直接進入到靜態。用完codespaces要在關閉code讓計時暫停。 w2-2 說明如何利用Replit管理從 Classroom 取得的分組倉儲 在Replit中需要新建import中不會有分組的網站，需要用from url來導入。導入後要改成python模式在import，就會推入分組倉儲，但是權限並沒有Replit上。我們還沒有身分去維護分組倉儲，要在shell中執行ssh-keygen就會跟s.cycu上一樣。之後要去找導入的倉儲位置，利用出現+工作=pwd執行，就會出現倉儲位置在home runnre下面。就知道讓分組倉儲跳到runner就可以進入.ssh。回到shell中利用更換目錄cd ../執行就可以跳到runner下，在常列印ls -l執行。就可以看到出現的pub在組長下，就有可用pub。再來要建立個人id。到檔案中尋找putty，確認有putty就要新增ssh並複製上import儲存。再去到putty內看到puttygen.exe要對應格式，在puttygen.exe要generate產生亂數，並出現內容全部複製到對應組長倉儲設定下settings，在settings中貼上複製的內容。id要存兩個地方，另一個要在ssh裡就是rsa，兩個id都儲存後就會載入並秀出pub key。 w2-3 如何利用近端可攜環境與外部 IPv4 開啟動態網站。 用ssh來啟動它，要克隆它去到靜態拉出putty，近端中沒有任何settings。建立之後會存在系統登錄閘，在黑窗用regedit機制跑可以使三個倉儲同步，就不怕code用完。並且有外擴ipv4等同有一個伺服器，就算在遠端去到防火牆設置ip就能進入。用PuTTY Configuration輸入ip定github.com，在sessions也是輸入github.com，並到ssh把剛設立的ppk給予它。倉儲要在常用資料位置，讓他可以隨時啟動，啟動近端時目錄可以方便鎖定。在ssh的credentials中的機制設置對應的資料夾中的ppk位置，在任何一台開起可攜環境後續就不會出現跑掉的問題。save後open後會給予一把key，此key連線時是無法取得的。存取github.com的檔案要匯出在可攜環境。若有對應的key並有open過了兩條件，那是可以有權限用ssh抓取下來。改版後就可以推回倉儲。在近端就自由了，可以啟動動態進入。之後小組可以各自獨立編輯，不會受他人干擾。若要讓組員連接過來，要先改密碼之後查詢ip，並複製到槽中的init.py去修改，丟入外部ip儲存，使其電腦變成一台主機。在cms一次組員就可以動作了","tags":"a-w2-41023110","url":"./2024-協同課程a-w2-41023110.html"},{"title":"W2","text":"第二週實作內容報告 w2 建立Github Classroom 指定分組倉儲，並使用replit、Codespaces及可攜環境維護分組倉儲，在git clone至近端執行動態網站. 利用 Github Classroom 指定分組倉儲 1.由組長建立2a-midagx名稱的倉儲分組網站，並找定組員join至剛建立的網站，使用codespaces維護倉儲網站，可直接安裝模組啟動動態網站，做法上和replit很像，一樣使用python3 main.py進入分組動態網站，使用python3 -m http.sever開啟靜態網站，說明codespaces使用上的限制。 2.使用replit管理github分組倉儲 利用 Codespaces 維護倉儲與網站 利用code中的Codespaces維護，開啟後用終端機開啟動態靜態網站，也可以在裡面更新網誌，記得在開啟python3前需要先安裝模組，就跟replit一樣需先確認是否有安裝過模組。 在近端執行動態網站 可攜環境需先至mde.tw網站上下載 portable_2024.7z 這個壓縮檔案，解壓縮至個人隨身系統，步驟如下 1.創建putty中的key 2.開啟可攜系統cmd 3.開啟後輸入cd tmp 導入tmp目錄中 4.進去tmp後 輸入git clone --recurse-submodules 倉儲網址.git(克隆遠端數據庫) 5.確認tmp目錄下有自己倉儲目錄後 輸入cd 倉儲名稱 6.進入倉儲目錄後，cms即可開啟動態網站","tags":"w2-41023108","url":"./41023108-w2.html"},{"title":"2024 Spring 課程 W1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]}